I"[l<hr />
<p>版权声明：本文为博主本人原创文章，遵循<em>CC 4.0 BY-SA</em>版权协议，转载请附上原文出处链接和本声明。</p>

<p>本文链接：<a href="https://www.jaspirit.tk/2020/06/28/python数据分析.html">www.jaspirit.tk/2020/06/28/pythonDA1.html</a></p>

<hr />

<h1 id="python爬虫数据分析数据可视化实战">Python爬虫+数据分析+数据可视化实战</h1>

<h2 id="1-背景介绍">1. 背景介绍</h2>
<p>哔哩哔哩（<a href="https://www.bilibili.com">www.bilibili.com</a>，英文名称：bilibili，简称B站）现为中国年轻世代高度聚集的文化社区和视频平台，该网站于2009年6月26日创建。</p>

<p>B站早期是一个ACG（动画、漫画、游戏）内容创作与分享的视频网站。经过十年多的发展，围绕用户、创作者和内容，构建了一个源源不断产生优质内容的生态系统，B站已经涵盖7000多个兴趣圈层的多元文化社区。
哔哩哔哩作为目前国内最大的动画作品平台，已上线了3000多部来自日本、美国以及国内的动画作品，具有大量的播放、点赞、弹幕、评分等数据可供分析。</p>

<p>bangumi（bangumi番组计划，<a href="https://bangumi.tv">bangumi.tv</a>）是专注于ACG领域的网站，是国内专业的动画评分网站。该网站可看作动画作品的数据库，拥有万余部动画作品的详细数据，包括集数、播放时间、监督以及评分、评分人数等信息等可供分析。</p>

<h2 id="2-需求目标">2. 需求目标</h2>

<ul>
  <li>编写一键爬虫脚本获取两个网站的动画作品数据</li>
  <li>对两网站的数据进行分析，其中对于评分进行相关性分析</li>
  <li>可视化展示数据</li>
</ul>

<h2 id="3-基于urllib的bangumi和bilibili一键爬虫脚本的编写">3. 基于urllib的bangumi和bilibili一键爬虫脚本的编写</h2>
<h3 id="31-bangumi网站分析及爬虫脚本的编写">3.1 bangumi网站分析及爬虫脚本的编写</h3>
<h4 id="311-网站分析">3.1.1 网站分析</h4>
<p>首先打开bangumi首页，并登录。登录后刷新页面，并用fiddler抓包，获取请求头：
<img src="/assets/images/200628/bgm-main-page.png" alt="bgm-main-page" />
<img src="/assets/images/200628/bgm-main-page-fiddler.png" alt="bgm-main-page-fiddler" />
打开一个需要爬取的动画作品页面，需要爬取的信息有5部分：</p>

<ol>
  <li>作品原名与类型</li>
  <li>作品详细信息</li>
  <li>作品简介</li>
  <li>作品tags</li>
  <li>作品评分数据</li>
</ol>

<p><img src="/assets/images/200628/example-1.png" alt="example-1" />
检查源代码，找到各部分对应的标签区块：</p>

<ul>
  <li>
    <p><strong>part1</strong>
<img src="/assets/images/200628/part1-code.png" alt="part1" /></p>
  </li>
  <li>
    <p><strong>part2</strong>
<img src="/assets/images/200628/part2-code.png" alt="part2" /></p>
  </li>
  <li>
    <p><strong>part3</strong>
<img src="/assets/images/200628/part3-code.png" alt="part3" /></p>
  </li>
  <li>
    <p><strong>part4</strong>
<img src="/assets/images/200628/part4-code.png" alt="part4" /></p>
  </li>
  <li>
    <p><strong>part5</strong>
<img src="/assets/images/200628/part5-code.png" alt="part5" /></p>
  </li>
</ul>

<p>获得对应的源代码位置后，便可以用beautifulsoup包对网页html进行解析获取数据了。</p>

<p>目前的问题是如何获取尽量多的作品数据。</p>

<p>根据网页地址，访问某部作品的页面应为<code class="language-plaintext highlighter-rouge">bangumi.tv/subject/…</code>(后面的数字称为<strong>subject号</strong>)，所以可以从1开始遍历所有的subject号，这理论上可行，但实际操作中发现了两个问题，一是subject号目前超过20万，全部遍历所需时间太长；二是并不是所有作品都是动画作品，还可能是书籍、音乐、游戏等：</p>

<ul>
  <li>
    <p><strong>例：漫画</strong>
<img src="/assets/images/200628/manga.png" alt="manga" /></p>
  </li>
  <li>
    <p><strong>例：专辑</strong>
<img src="/assets/images/200628/music.png" alt="music" /></p>
  </li>
</ul>

<p>所以必须找到其他方法。注意到bangumi作为评分网站具有<strong>排行榜</strong>功能：</p>

<p><img src="/assets/images/200628/rank-page.png" alt="rank" /></p>

<p>该排行榜收录了所有评分人数达到最低评分人数的动画，默认按照评分从高到低排序。截至2020年6月26日，共有5831部动画在榜。并且榜单分为243页，全部可以直接访问爬取subject号：</p>

<p><img src="/assets/images/200628/get-subject.png" alt="subjects" /></p>

<p>不需通过ajax请求获取某段排行的数据，这对于爬虫是非常友好的。</p>

<p>考虑到能上榜的作品都具有一定人气，并且只有评分人数达到一定数量评分才更有代表性，所以决定按照排行榜爬取这5800多部动画作品subject号，再访问各自的页面获取详细信息。</p>

<hr />
<h4 id="312-代码实现">3.1.2 代码实现</h4>

<ol>
  <li><strong>模块的导入</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span> <span class="k">as</span> <span class="n">bs</span>
<span class="kn">import</span> <span class="nn">urllib.request</span> <span class="k">as</span> <span class="n">ur</span>
<span class="kn">import</span> <span class="nn">urllib.parse</span> <span class="k">as</span> <span class="n">up</span>
<span class="kn">import</span> <span class="nn">urllib.error</span> <span class="k">as</span> <span class="n">ue</span>
<span class="kn">import</span> <span class="nn">http.cookiejar</span> <span class="k">as</span> <span class="n">hc</span>

<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">gzip</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">socket</span>

<span class="n">os</span><span class="p">.</span><span class="n">chdir</span><span class="p">(</span><span class="s">'...'</span><span class="p">)</span>
<span class="n">socket</span><span class="p">.</span><span class="n">setdefaulttimeout</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span>

</code></pre></div></div>

<ol>
  <li><strong>总榜subject号爬取</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 设置请求头
</span><span class="n">headers</span><span class="o">=</span><span class="p">{</span>
    <span class="s">'Host'</span><span class="p">:</span> <span class="s">'bangumi.tv'</span><span class="p">,</span>
    <span class="s">'Connection'</span><span class="p">:</span> <span class="s">'keep-alive'</span><span class="p">,</span>
    <span class="s">'Cache-Control'</span><span class="p">:</span> <span class="s">'max-age=0'</span><span class="p">,</span>
    <span class="s">'Upgrade-Insecure-Requests'</span><span class="p">:</span> <span class="s">'1'</span><span class="p">,</span>
    <span class="s">'User-Agent'</span><span class="p">:</span> <span class="s">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Dest'</span><span class="p">:</span> <span class="s">'document'</span><span class="p">,</span>
    <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Site'</span><span class="p">:</span> <span class="s">'none'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Mode'</span><span class="p">:</span> <span class="s">'navigate'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-User'</span><span class="p">:</span> <span class="s">'?1'</span><span class="p">,</span>
    <span class="s">'Accept-Encoding'</span><span class="p">:</span> <span class="s">'gzip'</span><span class="p">,</span>
    <span class="s">'Accept-Language'</span><span class="p">:</span> <span class="s">'zh-CN,zh;q=0.9'</span><span class="p">,</span>
    <span class="s">'Cookie'</span><span class="p">:</span> <span class="s">'...(此处略去)...__utmb=1.7.10.1593136256'</span>
<span class="p">}</span>
<span class="c1"># 创建cookiejar对象
</span><span class="n">cj</span><span class="o">=</span><span class="n">hc</span><span class="p">.</span><span class="n">CookieJar</span><span class="p">()</span>
<span class="c1"># 根据cookiejar创建handler对象
</span><span class="n">hl</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">HTTPCookieProcessor</span><span class="p">(</span><span class="n">cj</span><span class="p">)</span>
<span class="c1"># 根据handler创建opener对象
</span><span class="n">opener</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">build_opener</span><span class="p">(</span><span class="n">hl</span><span class="p">)</span>

<span class="c1"># 设定字符匹配模式将subject号匹配
</span><span class="n">pattern</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'li id="item_(\d+)"'</span><span class="p">)</span>
<span class="c1"># 储存subject号的列表
</span><span class="n">subjectlist</span><span class="o">=</span><span class="p">[]</span>

<span class="c1"># 更新cookie的函数（反爬机制之一）
</span><span class="k">def</span> <span class="nf">update_cookie</span><span class="p">(</span><span class="n">cookie</span><span class="o">=</span><span class="nb">str</span><span class="p">()):</span>
    <span class="k">return</span> <span class="n">cookie</span><span class="p">[:</span><span class="n">cookie</span><span class="p">.</span><span class="n">rfind</span><span class="p">(</span><span class="s">'utmb='</span><span class="p">)]</span><span class="o">+</span><span class="n">cookie</span><span class="p">[</span><span class="n">cookie</span><span class="p">.</span><span class="n">rfind</span><span class="p">(</span><span class="s">'utmb='</span><span class="p">):].</span><span class="n">split</span><span class="p">(</span><span class="s">'.'</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s">'.'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">cookie</span><span class="p">[</span><span class="n">cookie</span><span class="p">.</span><span class="n">rfind</span><span class="p">(</span><span class="s">'utmb='</span><span class="p">):].</span><span class="n">split</span><span class="p">(</span><span class="s">'.'</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s">'.'</span><span class="o">+</span><span class="n">cookie</span><span class="p">[</span><span class="n">cookie</span><span class="p">.</span><span class="n">rfind</span><span class="p">(</span><span class="s">'utmb='</span><span class="p">):].</span><span class="n">split</span><span class="p">(</span><span class="s">'.'</span><span class="p">)[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s">'.'</span><span class="o">+</span><span class="n">cookie</span><span class="p">[</span><span class="n">cookie</span><span class="p">.</span><span class="n">rfind</span><span class="p">(</span><span class="s">'utmb='</span><span class="p">):].</span><span class="n">split</span><span class="p">(</span><span class="s">'.'</span><span class="p">)[</span><span class="mi">3</span><span class="p">]</span>

<span class="c1"># 爬取subject号的函数
</span><span class="k">def</span> <span class="nf">bangumidownload</span><span class="p">(</span><span class="n">start</span><span class="p">,</span><span class="n">end</span><span class="p">,</span><span class="n">subjectlist</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">start</span><span class="p">,</span><span class="n">end</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">url</span><span class="o">=</span><span class="s">'https://bangumi.tv/anime/browser?sort=rank&amp;page=%d'</span><span class="o">%</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="c1"># 爬取排行榜每页信息
</span>        <span class="k">print</span><span class="p">(</span><span class="s">'downloading page'</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\r</span><span class="s">'</span><span class="p">)</span>
        
        <span class="n">try_time</span><span class="o">=</span><span class="mi">0</span>
        <span class="k">while</span> <span class="n">try_time</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
                <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">try_time</span><span class="o">+=</span><span class="mi">1</span>
                <span class="k">if</span> <span class="n">try_time</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">:</span>
                    <span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">]</span><span class="o">=</span><span class="n">update_cookie</span><span class="p">(</span><span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">])</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'retrying with cookie='</span><span class="p">,</span><span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">][</span><span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">].</span><span class="n">rfind</span><span class="p">(</span><span class="s">'utmb='</span><span class="p">):],</span><span class="n">try_time</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'Download Failed!!'</span><span class="p">)</span>
            
        <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span><span class="c1"># 解码
</span>        <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>

        <span class="n">thispage</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span><span class="n">content</span><span class="p">)</span><span class="c1"># 找到所有匹配结果
</span>        
        <span class="n">subjectlist</span><span class="p">.</span><span class="n">extend</span><span class="p">(</span><span class="n">thispage</span><span class="p">)</span>

<span class="n">bangumidownload</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">243</span><span class="p">,</span><span class="n">subjectlist</span><span class="p">)</span>

<span class="c1"># 保存至文件
</span><span class="n">date</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">localtime</span><span class="p">().</span><span class="n">tm_mon</span><span class="p">)</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">localtime</span><span class="p">().</span><span class="n">tm_mday</span><span class="p">)</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">r'bangumi\subjectlist_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.json'</span><span class="p">,</span><span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">subjectlist</span><span class="p">,</span><span class="n">fp</span><span class="p">)</span>
</code></pre></div></div>
<ol>
  <li><strong>详细信息爬取</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bgmdb</span><span class="o">=</span><span class="p">[]</span> <span class="c1">#保存数据的列表
</span>
<span class="n">picpattern</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'href="//(.*?)"'</span><span class="p">)</span> <span class="c1">#图片链接匹配模式
</span>
<span class="k">def</span> <span class="nf">bangumifulldownload</span><span class="p">(</span><span class="n">bgmsubjects</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">bgmsubjects</span><span class="p">:</span>
        <span class="n">url</span><span class="o">=</span><span class="s">'https://bangumi.tv/subject/'</span><span class="o">+</span><span class="n">i</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'downloading subject '</span><span class="o">+</span><span class="n">i</span><span class="p">)</span>
        
        <span class="n">try_time</span><span class="o">=</span><span class="mi">0</span>
        <span class="k">while</span> <span class="n">try_time</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
                <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span> 
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">try_time</span><span class="o">+=</span><span class="mi">1</span>
                <span class="k">if</span> <span class="n">try_time</span><span class="o">&gt;</span><span class="mi">2</span><span class="p">:</span>
                    <span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">]</span><span class="o">=</span><span class="n">update_cookie</span><span class="p">(</span><span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">])</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'retrying with cookie='</span><span class="p">,</span><span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">][</span><span class="n">headers</span><span class="p">[</span><span class="s">'Cookie'</span><span class="p">].</span><span class="n">rfind</span><span class="p">(</span><span class="s">'utmb='</span><span class="p">):],</span><span class="n">try_time</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'Download Failed!!'</span><span class="p">)</span>
            
        <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>

        <span class="n">soup</span><span class="o">=</span><span class="n">bs</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
        <span class="n">mainWrapper</span><span class="o">=</span><span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'mainWrapper'</span><span class="p">)</span>
        <span class="n">name</span><span class="o">=</span><span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'h1'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'nameSingle'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">mainWrapper</span><span class="o">==</span><span class="bp">None</span> <span class="ow">or</span> <span class="n">name</span><span class="o">==</span><span class="bp">None</span><span class="p">:</span>
            <span class="k">continue</span>
        
        <span class="n">infobox</span><span class="o">=</span><span class="n">mainWrapper</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'ul'</span><span class="p">,</span><span class="nb">id</span><span class="o">=</span><span class="s">'infobox'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">infobox</span><span class="o">==</span><span class="bp">None</span><span class="p">:</span>
            <span class="k">continue</span>
        <span class="n">infodict</span><span class="o">=</span><span class="nb">dict</span><span class="p">()</span>
        <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'subject'</span><span class="p">:</span><span class="n">i</span><span class="p">,</span><span class="s">'原名'</span><span class="p">:</span><span class="n">name</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'a'</span><span class="p">).</span><span class="n">text</span> <span class="k">if</span> <span class="n">name</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'a'</span><span class="p">)</span><span class="o">!=</span><span class="bp">None</span> <span class="k">else</span> <span class="s">''</span><span class="p">,</span>
                         <span class="s">'类型'</span><span class="p">:</span><span class="n">name</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'small'</span><span class="p">).</span><span class="n">text</span> <span class="k">if</span> <span class="n">name</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'small'</span><span class="p">)</span><span class="o">!=</span><span class="bp">None</span> <span class="k">else</span> <span class="s">''</span><span class="p">})</span>
        
        <span class="n">summary</span><span class="o">=</span><span class="n">mainWrapper</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="nb">id</span><span class="o">=</span><span class="s">'subject_summary'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">summary</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'简介'</span><span class="p">:</span><span class="n">summary</span><span class="p">.</span><span class="n">text</span><span class="p">})</span>

        <span class="n">pic</span><span class="o">=</span><span class="n">mainWrapper</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'a'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'thickbox cover'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">pic</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">pic</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">picpattern</span><span class="p">,</span><span class="nb">str</span><span class="p">(</span><span class="n">pic</span><span class="p">))</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">pic</span><span class="p">):</span>
                <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'封面'</span><span class="p">:</span><span class="s">'https://'</span><span class="o">+</span><span class="n">pic</span><span class="p">[</span><span class="mi">0</span><span class="p">]})</span>
        
        <span class="n">info</span><span class="o">=</span><span class="n">infobox</span><span class="p">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'li'</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">each_info</span> <span class="ow">in</span> <span class="n">info</span><span class="p">:</span>
            <span class="n">kv</span><span class="o">=</span><span class="n">each_info</span><span class="p">.</span><span class="n">text</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">':'</span><span class="p">,</span><span class="n">maxsplit</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="n">kv</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">strip</span><span class="p">():</span><span class="n">kv</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">strip</span><span class="p">()})</span>
        
        <span class="n">tagWrapper</span><span class="o">=</span><span class="n">mainWrapper</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'inner'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">tagWrapper</span><span class="o">==</span><span class="bp">None</span><span class="p">:</span>
            <span class="k">continue</span>
        <span class="n">tagtext</span><span class="o">=</span><span class="n">tagWrapper</span><span class="p">.</span><span class="n">select</span><span class="p">(</span><span class="s">'.l span,a small'</span><span class="p">)</span>
        <span class="n">tags</span><span class="o">=</span><span class="p">[]</span>
        <span class="k">for</span> <span class="n">everytag</span> <span class="ow">in</span> <span class="n">tagtext</span><span class="p">:</span>
            <span class="n">tags</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">everytag</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
        <span class="n">tags</span><span class="o">=</span><span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">tags</span><span class="p">)</span>
        <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'tags'</span><span class="p">:</span><span class="n">tags</span><span class="p">})</span>
        
        <span class="n">chartWrapper</span><span class="o">=</span><span class="n">mainWrapper</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="nb">id</span><span class="o">=</span><span class="s">'ChartWarpper'</span><span class="p">)</span>
        <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'votes'</span><span class="p">:</span><span class="n">chartWrapper</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="nb">property</span><span class="o">=</span><span class="s">'v:votes'</span><span class="p">).</span><span class="n">text</span><span class="p">})</span>
        
        <span class="n">rating_list</span><span class="o">=</span><span class="p">[]</span>
        <span class="k">for</span> <span class="n">each_rater</span> <span class="ow">in</span> <span class="n">chartWrapper</span><span class="p">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'span'</span><span class="p">,{</span><span class="s">'class'</span><span class="p">:</span><span class="s">'count'</span><span class="p">}):</span>
            <span class="n">rating_list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">each_rater</span><span class="p">.</span><span class="n">text</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
        <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'ratings'</span><span class="p">:</span><span class="n">rating_list</span><span class="p">})</span>
        
        <span class="c1"># 计算平均分
</span>        <span class="n">overall_score</span><span class="o">=</span><span class="mi">0</span>
        <span class="n">overall_vote</span><span class="o">=</span><span class="mi">0</span>
        <span class="k">for</span> <span class="n">score</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">overall_vote</span><span class="o">+=</span><span class="nb">int</span><span class="p">(</span><span class="n">infodict</span><span class="p">[</span><span class="s">'ratings'</span><span class="p">][</span><span class="mi">10</span><span class="o">-</span><span class="n">score</span><span class="p">])</span>
            <span class="n">overall_score</span><span class="o">+=</span><span class="n">score</span><span class="o">*</span><span class="nb">int</span><span class="p">(</span><span class="n">infodict</span><span class="p">[</span><span class="s">'ratings'</span><span class="p">][</span><span class="mi">10</span><span class="o">-</span><span class="n">score</span><span class="p">])</span>
        <span class="n">overall_score</span><span class="o">=</span><span class="n">overall_score</span><span class="o">/</span><span class="n">overall_vote</span>
        <span class="n">infodict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'rating'</span><span class="p">:</span><span class="nb">str</span><span class="p">(</span><span class="s">'%.3f'</span><span class="o">%</span><span class="p">(</span><span class="n">overall_score</span><span class="p">))})</span>
        
        <span class="k">print</span><span class="p">(</span><span class="n">infodict</span><span class="p">)</span>
        <span class="n">bgmdb</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">infodict</span><span class="p">)</span>

<span class="n">bangumifulldownload</span><span class="p">(</span><span class="n">subjectlist</span><span class="p">)</span>
<span class="c1"># 保存至文件
</span><span class="n">date</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">localtime</span><span class="p">().</span><span class="n">tm_mon</span><span class="p">)</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">localtime</span><span class="p">().</span><span class="n">tm_mday</span><span class="p">)</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">r'bangumi\bgmdb_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.json'</span><span class="p">,</span><span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">,</span><span class="n">fp</span><span class="p">)</span>
</code></pre></div></div>

<ol>
  <li><strong>数据初步清洗</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 读取获得的原始数据
</span><span class="n">bgmfulldb</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">read_json</span><span class="p">(</span><span class="s">r'bangumi\bgmdb_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.json'</span><span class="p">)</span>
<span class="c1"># 选取非空值数最少的60个键，将键值对复制到新的列表中（进行了初步清洗）
</span><span class="n">indexs</span><span class="o">=</span><span class="n">bgmfulldb</span><span class="p">[</span><span class="o">~</span><span class="n">bgmfulldb</span><span class="p">.</span><span class="n">isna</span><span class="p">()].</span><span class="n">count</span><span class="p">().</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)[:</span><span class="mi">60</span><span class="p">].</span><span class="n">index</span>

<span class="n">bgmdb2</span><span class="o">=</span><span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">bgmdb</span><span class="p">:</span>
    <span class="n">thisanime</span><span class="o">=</span><span class="p">[]</span>
    
    <span class="k">for</span> <span class="n">each_key</span> <span class="ow">in</span> <span class="n">indexs</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">each_key</span> <span class="ow">in</span> <span class="n">i</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
            <span class="n">thisanime</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="n">each_key</span><span class="p">])</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">thisanime</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">''</span><span class="p">)</span>
    
    <span class="n">bgmdb2</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">thisanime</span><span class="p">)</span>
<span class="c1"># 转化成DataFrame格式并转存为csv格式文件
</span><span class="n">bgmdb2</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">bgmdb2</span><span class="p">,</span><span class="n">columns</span><span class="o">=</span><span class="n">indexs</span><span class="p">)</span>
<span class="n">bgmdb2</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">r'bangumi\bgmdb_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.csv'</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>
<p>初步清洗后的数据格式如下：</p>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>votes</th>
      <th>原名</th>
      <th>类型</th>
      <th>封面</th>
      <th>tags</th>
      <th>rating</th>
      <th>ratings</th>
      <th>话数</th>
      <th>简介</th>
      <th>中文名</th>
      <th>...</th>
      <th>主题歌作曲</th>
      <th>主题歌作词</th>
      <th>开始</th>
      <th>结束</th>
      <th>片长</th>
      <th>主题歌编曲</th>
      <th>第二原画</th>
      <th>音响</th>
      <th>特效</th>
      <th>机械设定</th>
    </tr>
    <tr>
      <th>subject</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>253</th>
      <td>7016</td>
      <td>カウボーイビバップ</td>
      <td>TV</td>
      <td>https://lain.bgm.tv/pic/cover/l/c2/4c/253_t3XW...</td>
      <td>渡边信一郎 2293 菅野洋子 2196 星际牛仔 1529 经典 1139 SUNRISE...</td>
      <td>9.143</td>
      <td>['3325', '2252', '977', '287', '88', '37', '9'...</td>
      <td>26</td>
      <td>2021年，随着超光速航行技术的实现，人类得以在太阳系范围内方便的自由移动，但...</td>
      <td>星际牛仔</td>
      <td>...</td>
      <td>菅野よう子</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>菅野よう子</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>長谷川敏生</td>
      <td>山根公利</td>
    </tr>
    <tr>
      <th>326</th>
      <td>3968</td>
      <td>攻殻機動隊 S.A.C. 2nd GIG</td>
      <td>TV</td>
      <td>https://lain.bgm.tv/pic/cover/l/a6/66/326_M9f1...</td>
      <td>菅野洋子 957 攻殻機動隊 871 神山健治 762 攻壳机动队 668 科幻 619 押...</td>
      <td>9.129</td>
      <td>['1773', '1359', '623', '129', '44', '12', '3'...</td>
      <td>26</td>
      <td>这个世界距离我们并不遥远，你把它看作是现代社会的镜子亦为不可。\r\n也许：无论人类怎样发展...</td>
      <td>攻壳机动队 S.A.C. 2nd GIG</td>
      <td>...</td>
      <td>菅野よう子</td>
      <td>Origa</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>菅野よう子</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>村上正博</td>
      <td>常木志伸、寺岡賢司</td>
    </tr>
    <tr>
      <th>324</th>
      <td>4896</td>
      <td>攻殻機動隊 STAND ALONE COMPLEX</td>
      <td>TV</td>
      <td>https://lain.bgm.tv/pic/cover/l/f2/fc/324_psuX...</td>
      <td>攻壳机动队 1606 菅野洋子 1215 科幻 926 神山健治 852 士郎正宗 775 ...</td>
      <td>9.081</td>
      <td>['2036', '1780', '790', '172', '61', '26', '5'...</td>
      <td>26</td>
      <td>公元2030的世界，改造人、生化人、机器人等等的存在已经非常普及。主人公草薙素子正是人类最高...</td>
      <td>攻壳机动队 STAND ALONE COMPLEX</td>
      <td>...</td>
      <td>菅野よう子</td>
      <td>Origa</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>菅野よう子</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>遠藤誠、村上正博</td>
      <td>寺岡賢司、常木志伸</td>
    </tr>
  </tbody>
</table>

<h3 id="32-bilibili网站分析及爬虫脚本的编写">3.2 bilibili网站分析及爬虫脚本的编写</h3>
<h4 id="321-网站分析">3.2.1 网站分析</h4>
<p>bilibili的动画作品分处于番剧（国外作品）区与国创（国内作品）区，故主要对这两个区进行分析。</p>

<p><img src="/assets/images/200628/bilibili-mainpage.png" alt="bilibili-mainpage" /></p>

<p>进入番剧区后，点击“番剧索引”，可以发现与bangumi类似的页面，在这个页面同样可以获取到所有上线的国外动画作品（国创区同理）：</p>

<p><img src="/assets/images/200628/bilibili-index.png" alt="bilibili-index" /></p>

<p>每个作品对应一个链接: <code class="language-plaintext highlighter-rouge">https://www.bilibili.com/bangumi/play/ss...</code>（ss后面的数字称为<strong>ss号</strong>）</p>

<p><img src="/assets/images/200628/bilibili-index3.png" alt="bilibili-index3" /></p>

<p>打开其中一个作品，进入播放页面，在这个页面上可以看到播放量、弹幕数、追番人数、作品类型、完结情况、集数、简介、评分与评分人数等信息：</p>

<p><img src="/assets/images/200628/bilibili-sample1.png" alt="bilibili-sample1" /></p>

<p>对该网页进行抓包，尝试获取以上信息：</p>

<p><img src="/assets/images/200628/bilibili-ep-result1.png" alt="bilibili-ep-result1" /></p>

<p>可以发现，响应中有一些信息，但是缺少播放数、弹幕数等信息，说明网页不是一次性加载出来的。在抓包界面可以看到很多<code class="language-plaintext highlighter-rouge">data.bilibili.com</code>的请求，估计是获取更多的页面数据，比如视频源信息等。
在所有抓包结果中搜索弹幕数1126，找到了对应的api接口：<code class="language-plaintext highlighter-rouge">api.bilibili.com/pgc/web/season/stat?season_id=…</code>，该接口返回一个json格式字符串，存有精确的播放量、弹幕数等信息（但没有评分信息）：</p>

<p><img src="/assets/images/200628/bilibili-api1.png" alt="bilibili-api1" /></p>

<p>请求中的season_id即为前述的ss号。
继续搜索评分9.2，发现另一个api：<code class="language-plaintext highlighter-rouge">api.bilibili.com /pgc/review/user?media_id=…&amp;ts=…</code>
请求链接中的media_id下称为<strong>md号</strong>。</p>

<p><img src="/assets/images/200628/bilibili-api2.png" alt="bilibili-api2" /></p>

<p>该api提供了详尽的作品信息，包括地区、封面链接、评分、标题、类型，还包含一个ss链接。
由于在初始网页<code class="language-plaintext highlighter-rouge">https://www.bilibili.com/bangumi/play/ss...</code>中可以找到md号，故设计以下爬虫流程：</p>

<p><strong>爬取ss号–访问ss页面获取作品简介和md号–根据ss号和md号访问相应的api获取详细信息。</strong></p>

<p>最后，访问该json中的share_url，打开的页面为该作品的介绍界面，包含作品开播日期、完结情况、tags等：</p>

<p><img src="/assets/images/200628/bilibili-sample2.png" alt="bilibili-sample2" /></p>

<p>找到对应的位置：</p>

<p><img src="/assets/images/200628/bilibili-sample3.png" alt="bilibili-sample3" /></p>

<p>故可以访问该页面获取tags、日期、话数。</p>

<p>对于bilibili网站，总的爬虫流程设计如下:</p>

<p><strong>从索引页面爬取ss号—访问ss页面获取作品简介和md号—根据ss号和md号访问相应的api获取详细信息—访问md页面获取作品开播日期和话数—爬取封面图。</strong></p>

<h4 id="322-代码实现">3.2.2 代码实现</h4>

<ol>
  <li><strong>模块的导入</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span> <span class="k">as</span> <span class="n">bs</span>
<span class="kn">import</span> <span class="nn">urllib.request</span> <span class="k">as</span> <span class="n">ur</span>
<span class="kn">import</span> <span class="nn">urllib.parse</span> <span class="k">as</span> <span class="n">up</span>
<span class="kn">import</span> <span class="nn">urllib.error</span> <span class="k">as</span> <span class="n">ue</span>
<span class="kn">import</span> <span class="nn">http.cookiejar</span> <span class="k">as</span> <span class="n">hc</span>

<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">gzip</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">socket</span>

<span class="n">os</span><span class="p">.</span><span class="n">chdir</span><span class="p">(</span><span class="s">r'...'</span><span class="p">)</span>
<span class="n">socket</span><span class="p">.</span><span class="n">setdefaulttimeout</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div></div>

<ol>
  <li><strong>配置爬虫条件</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 设置请求头
# api请求头
</span><span class="n">apiheaders</span><span class="o">=</span><span class="p">{</span>
    <span class="s">'Host'</span><span class="p">:</span> <span class="s">'api.bilibili.com'</span><span class="p">,</span>
    <span class="s">'Connection'</span><span class="p">:</span> <span class="s">'keep-alive'</span><span class="p">,</span>
    <span class="s">'Cache-Control'</span><span class="p">:</span> <span class="s">'max-age=0'</span><span class="p">,</span>
    <span class="s">'Upgrade-Insecure-Requests'</span><span class="p">:</span> <span class="s">'1'</span><span class="p">,</span>
    <span class="s">'Accept'</span><span class="p">:</span><span class="s">' application/json, text/plain, */*'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Dest'</span><span class="p">:</span> <span class="s">'empty'</span><span class="p">,</span>
    <span class="s">'User-Agent'</span><span class="p">:</span> <span class="s">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span><span class="p">,</span>
    <span class="s">'Origin'</span><span class="p">:</span> <span class="s">'https://www.bilibili.com'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Site'</span><span class="p">:</span> <span class="s">'same-site'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-User'</span><span class="p">:</span> <span class="s">'?1'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Mode'</span><span class="p">:</span> <span class="s">'cors'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Dest'</span><span class="p">:</span> <span class="s">'document'</span><span class="p">,</span>
    <span class="s">'Referer'</span><span class="p">:</span> <span class="s">'https://www.bilibili.com/anime/index/'</span><span class="p">,</span>
    <span class="s">'Accept-Encoding'</span><span class="p">:</span> <span class="s">'gzip, deflate, br'</span><span class="p">,</span>
    <span class="s">'Accept-Language'</span><span class="p">:</span> <span class="s">'zh-CN,zh;q=0.9'</span><span class="p">,</span>
    <span class="s">'Cookie'</span><span class="p">:</span><span class="n">cookie</span>
<span class="p">}</span>
<span class="c1"># 网页请求头
</span><span class="n">wwwheaders</span><span class="o">=</span><span class="p">{</span>
    <span class="s">'Host'</span><span class="p">:</span> <span class="s">'www.bilibili.com'</span><span class="p">,</span>
    <span class="s">'Connection'</span><span class="p">:</span> <span class="s">'keep-alive'</span><span class="p">,</span>
    <span class="s">'Cache-Control'</span><span class="p">:</span> <span class="s">'max-age=0'</span><span class="p">,</span>
    <span class="s">'Upgrade-Insecure-Requests'</span><span class="p">:</span> <span class="s">'1'</span><span class="p">,</span>
    <span class="s">'User-Agent'</span><span class="p">:</span> <span class="s">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Dest'</span><span class="p">:</span> <span class="s">'document'</span><span class="p">,</span>
    <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'text/html,application/xhtml+xml,application/xml;q=0.9'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Site'</span><span class="p">:</span> <span class="s">'same-origin'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Mode'</span><span class="p">:</span> <span class="s">'navigate'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-User'</span><span class="p">:</span> <span class="s">'?1'</span><span class="p">,</span>
    <span class="s">'Referer'</span><span class="p">:</span> <span class="s">'https://www.bilibili.com/anime/index/'</span><span class="p">,</span>
    <span class="s">'Accept-Encoding'</span><span class="p">:</span> <span class="s">'gzip, deflate, br'</span><span class="p">,</span>
    <span class="s">'Accept-Language'</span><span class="p">:</span> <span class="s">'zh-CN,zh;q=0.9'</span><span class="p">,</span>
    <span class="s">'Cookie'</span><span class="p">:</span><span class="n">cookie</span>
<span class="p">}</span>
<span class="c1"># 图片请求头
</span><span class="n">imageheaders</span><span class="o">=</span><span class="p">{</span>
    <span class="s">'Host'</span><span class="p">:</span> <span class="s">'i0.hdslb.com'</span><span class="p">,</span>
    <span class="s">'Connection'</span><span class="p">:</span> <span class="s">'keep-alive'</span><span class="p">,</span>
    <span class="s">'User-Agent'</span><span class="p">:</span> <span class="s">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Dest'</span><span class="p">:</span> <span class="s">'image'</span><span class="p">,</span>
    <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'image/webp,image/apng,image/*,*/*;q=0.8'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Site'</span><span class="p">:</span> <span class="s">'cross-site'</span><span class="p">,</span>
    <span class="s">'Sec-Fetch-Mode'</span><span class="p">:</span> <span class="s">'no-cors'</span><span class="p">,</span>
    <span class="s">'Referer'</span><span class="p">:</span> <span class="s">'https://www.bilibili.com/bangumi/media/md1178/?from=search&amp;seid=17806546061422186816'</span><span class="p">,</span>
    <span class="s">'Accept-Encoding'</span><span class="p">:</span> <span class="s">'gzip, deflate, br'</span><span class="p">,</span>
    <span class="s">'Accept-Language'</span><span class="p">:</span> <span class="s">'zh-CN,zh;q=0.9'</span>
<span class="p">}</span>
<span class="c1"># 创建cookiejar对象
</span><span class="n">cj</span><span class="o">=</span><span class="n">hc</span><span class="p">.</span><span class="n">CookieJar</span><span class="p">()</span>
<span class="c1"># 根据cookiejar创建handler对象
</span><span class="n">hl</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">HTTPCookieProcessor</span><span class="p">(</span><span class="n">cj</span><span class="p">)</span>
<span class="c1"># 根据handler创建opener对象
</span><span class="n">opener</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">build_opener</span><span class="p">(</span><span class="n">hl</span><span class="p">)</span>
</code></pre></div></div>

<ol>
  <li><strong>爬取ss号</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sslist</span><span class="o">=</span><span class="nb">list</span><span class="p">()</span>

<span class="n">pattern</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'https://www.bilibili.com/bangumi/play/ss\d+'</span><span class="p">)</span>
<span class="n">pattern2</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'"title":"(.*?)"'</span><span class="p">)</span>
<span class="c1"># 番剧区索引
</span><span class="k">def</span> <span class="nf">ssdownload</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1000</span><span class="p">):</span>
        <span class="n">url</span><span class="o">=</span><span class="s">'https://api.bilibili.com/pgc/season/index/result?season_version=-1&amp;area=-1&amp;is_finish=-1&amp;copyright=-1&amp;season_status=-1&amp;season_month=-1&amp;year=-1&amp;style_id=-1&amp;order=5&amp;st=1&amp;sort=0&amp;page='</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">+</span><span class="s">'&amp;season_type=1&amp;pagesize=20&amp;type=1'</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'downloading page='</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
        
        <span class="n">try_time</span><span class="o">=</span><span class="mi">0</span>
        <span class="k">while</span> <span class="n">try_time</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
                <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
                <span class="k">break</span>
            <span class="k">except</span> <span class="n">ue</span><span class="p">.</span><span class="n">HTTPError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'Page Not found...skipped'</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">try_time</span><span class="o">+=</span><span class="mi">1</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'retrying'</span><span class="p">,</span><span class="n">try_time</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'Download Failed!!'</span><span class="p">)</span>
        
        
        <span class="k">try</span><span class="p">:</span>
            <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">break</span>
            
        <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
        
        <span class="n">titles</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern2</span><span class="p">,</span><span class="n">content</span><span class="p">)</span>
        <span class="n">ssurl</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span><span class="n">content</span><span class="p">)</span>
        
        
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">ssurl</span><span class="p">)):</span>
            <span class="n">sslist</span><span class="p">.</span><span class="n">append</span><span class="p">({</span><span class="s">'title'</span><span class="p">:</span><span class="n">titles</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="s">'ssurl'</span><span class="p">:</span><span class="n">ssurl</span><span class="p">[</span><span class="n">i</span><span class="p">]})</span> 
<span class="c1"># 国创区索引
</span><span class="k">def</span> <span class="nf">ssdownload2</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1000</span><span class="p">):</span>
        <span class="n">url</span><span class="o">=</span><span class="s">'https://api.bilibili.com/pgc/season/index/result?season_version=-1&amp;is_finish=-1&amp;copyright=-1&amp;season_status=-1&amp;year=-1&amp;style_id=-1&amp;order=5&amp;st=4&amp;sort=0&amp;page='</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">+</span><span class="s">'&amp;season_type=4&amp;pagesize=20&amp;type=1'</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'downloading page='</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
        
        <span class="n">try_time</span><span class="o">=</span><span class="mi">0</span>
        <span class="k">while</span> <span class="n">try_time</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
                <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
                <span class="k">break</span>
            <span class="k">except</span> <span class="n">ue</span><span class="p">.</span><span class="n">HTTPError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'Page Not found...skipped'</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">try_time</span><span class="o">+=</span><span class="mi">1</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'retrying'</span><span class="p">,</span><span class="n">try_time</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'Download Failed!!'</span><span class="p">)</span>
        
        
        <span class="k">try</span><span class="p">:</span>
            <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">break</span>
            
        <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
        
        <span class="n">titles</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern2</span><span class="p">,</span><span class="n">content</span><span class="p">)</span>
        <span class="n">ssurl</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span><span class="n">content</span><span class="p">)</span>
        
        
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">ssurl</span><span class="p">)):</span>
            <span class="n">sslist</span><span class="p">.</span><span class="n">append</span><span class="p">({</span><span class="s">'title'</span><span class="p">:</span><span class="n">titles</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="s">'ssurl'</span><span class="p">:</span><span class="n">ssurl</span><span class="p">[</span><span class="n">i</span><span class="p">]})</span> 

<span class="n">ssdownload</span><span class="p">()</span>
<span class="n">ssdownload2</span><span class="p">()</span>
</code></pre></div></div>

<ol>
  <li><strong>访问ss链接获取md号与简介</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mdpattern</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">'\d+'</span><span class="p">)</span>
<span class="n">mdlist</span><span class="o">=</span><span class="p">[]</span>
<span class="n">summary_dict</span><span class="o">=</span><span class="p">{}</span>
<span class="k">def</span> <span class="nf">mddownload</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">each_ssurl</span> <span class="ow">in</span> <span class="n">sslist</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'downloading item='</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">sslist</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">each_ssurl</span><span class="p">)))</span>
        
        <span class="n">try_time</span><span class="o">=</span><span class="mi">0</span>
        <span class="n">httperror</span><span class="o">=</span><span class="bp">False</span>
        <span class="k">while</span> <span class="n">try_time</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">each_ssurl</span><span class="p">[</span><span class="s">'ssurl'</span><span class="p">],</span><span class="n">headers</span><span class="o">=</span><span class="n">wwwheaders</span><span class="p">)</span>
                <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
                <span class="k">break</span>
            <span class="k">except</span> <span class="n">ue</span><span class="p">.</span><span class="n">HTTPError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">httperror</span><span class="o">=</span><span class="bp">True</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'Page Not found...skipped'</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">try_time</span><span class="o">+=</span><span class="mi">1</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'retrying'</span><span class="p">,</span><span class="n">try_time</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'Download Failed!!'</span><span class="p">)</span>
        
        <span class="k">if</span> <span class="n">httperror</span><span class="p">:</span>
            <span class="k">continue</span>
        
        <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
        
        <span class="n">soup</span><span class="o">=</span><span class="n">bs</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
        
        <span class="n">mdlist</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">re</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="n">mdpattern</span><span class="p">,</span><span class="nb">str</span><span class="p">(</span><span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span> <span class="nb">id</span><span class="o">=</span><span class="s">'media_module'</span><span class="p">).</span><span class="n">find</span><span class="p">(</span><span class="s">'a'</span><span class="p">))).</span><span class="n">group</span><span class="p">())</span>
        <span class="n">summary_dict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="n">mdlist</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span><span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'absolute'</span><span class="p">).</span><span class="n">text</span><span class="p">})</span>

<span class="n">mddownload</span><span class="p">()</span>
<span class="n">mdlist</span><span class="o">=</span><span class="nb">sorted</span><span class="p">(</span><span class="n">mdlist</span><span class="p">)</span>
</code></pre></div></div>
<ol>
  <li><strong>访问api</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bilidb</span><span class="o">=</span><span class="nb">list</span><span class="p">()</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">mdlist</span><span class="p">:</span>
    <span class="n">url</span><span class="o">=</span><span class="s">'https://api.bilibili.com/pgc/review/user?media_id='</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">apiheaders</span><span class="p">)</span>
    <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
    <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">(),</span><span class="s">'utf-8'</span><span class="p">)</span>
    <span class="n">mdjson</span><span class="o">=</span><span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
    
    <span class="k">if</span> <span class="s">'result'</span> <span class="ow">in</span> <span class="n">mdjson</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
        <span class="k">if</span> <span class="s">'media'</span> <span class="ow">in</span> <span class="n">mdjson</span><span class="p">[</span><span class="s">'result'</span><span class="p">].</span><span class="n">keys</span><span class="p">():</span>
            <span class="n">url</span><span class="o">=</span><span class="s">'https://api.bilibili.com/pgc/web/season/stat?season_id='</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">mdjson</span><span class="p">[</span><span class="s">'result'</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'season_id'</span><span class="p">])</span>
            <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
            <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
            <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">(),</span><span class="s">'utf-8'</span><span class="p">)</span>
            <span class="n">mdjson2</span><span class="o">=</span><span class="n">json</span><span class="p">.</span><span class="n">loads</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
            <span class="n">mdjson</span><span class="p">[</span><span class="s">'result'</span><span class="p">].</span><span class="n">update</span><span class="p">(</span><span class="n">mdjson2</span><span class="p">[</span><span class="s">'result'</span><span class="p">])</span>
    
    <span class="n">bilidb</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">mdjson</span><span class="p">[</span><span class="s">'result'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'result'</span> <span class="ow">in</span> <span class="n">mdjson</span><span class="p">.</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="nb">dict</span><span class="p">())</span>
    <span class="k">print</span><span class="p">(</span><span class="n">mdlist</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">i</span><span class="p">),</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\r</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<ol>
  <li><strong>访问md页面获取日期、集数、tags</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tp_finished</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'(\d+)年(\d+)月(\d+)日开播.*(\d+)'</span><span class="p">)</span>
<span class="n">tp_not_finished</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'(\d+)年(\d+)月(\d+)日开播'</span><span class="p">)</span>
<span class="n">tp_movie</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'(\d+)年(\d+)月(\d+)日上映'</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">download</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bilidb</span><span class="p">)):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\r</span><span class="s">'</span><span class="p">)</span>
        
        <span class="k">if</span> <span class="s">'media'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">():</span>
            <span class="k">continue</span>
        <span class="n">url</span><span class="o">=</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'share_url'</span><span class="p">]</span>
        
        <span class="n">try_time</span><span class="o">=</span><span class="mi">0</span>
        <span class="n">httperror</span><span class="o">=</span><span class="bp">False</span>
        <span class="k">while</span> <span class="n">try_time</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">wwwheaders</span><span class="p">)</span>
                <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
                <span class="k">break</span>
            <span class="k">except</span> <span class="n">ue</span><span class="p">.</span><span class="n">HTTPError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">httperror</span><span class="o">=</span><span class="bp">True</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'Page Not found...skipped'</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">try_time</span><span class="o">+=</span><span class="mi">1</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'retrying'</span><span class="p">,</span><span class="n">try_time</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'Download Failed!!'</span><span class="p">)</span>
        
        <span class="k">if</span> <span class="n">httperror</span><span class="p">:</span>
            <span class="k">continue</span>
        
        <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
        
        <span class="n">soup</span><span class="o">=</span><span class="n">bs</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
        <span class="n">tags</span><span class="o">=</span><span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'media-info-r'</span><span class="p">).</span><span class="n">find_all</span><span class="p">(</span><span class="s">'span'</span><span class="p">,{</span><span class="s">'class'</span><span class="p">:</span><span class="s">'media-tag'</span><span class="p">})</span>
        <span class="n">tags</span><span class="o">=</span><span class="p">[</span><span class="n">each_tag</span><span class="p">.</span><span class="n">text</span> <span class="k">for</span> <span class="n">each_tag</span> <span class="ow">in</span> <span class="n">tags</span><span class="p">]</span>
        <span class="n">tags</span><span class="o">=</span><span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">tags</span><span class="p">)</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">tags</span><span class="p">)</span> <span class="k">else</span> <span class="s">''</span>
        <span class="n">time</span><span class="o">=</span><span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'media-info-r'</span><span class="p">).</span><span class="n">find_all</span><span class="p">(</span><span class="s">'div'</span><span class="p">,{</span><span class="s">'class'</span><span class="p">:</span><span class="s">'media-info-time'</span><span class="p">})[</span><span class="mi">0</span><span class="p">]</span>
        
        <span class="n">res</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="n">tp_finished</span><span class="p">,</span><span class="n">time</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
        <span class="n">finished</span><span class="o">=</span><span class="bp">False</span>
        <span class="k">if</span> <span class="n">res</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span> <span class="c1"># finished
</span>            <span class="n">finished</span><span class="o">=</span><span class="bp">True</span>
            <span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">.</span><span class="n">groups</span><span class="p">()</span>
            <span class="n">date</span><span class="o">=</span><span class="s">'-'</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span>
            <span class="n">episodes</span><span class="o">=</span><span class="n">res</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">res</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="n">tp_not_finished</span><span class="p">,</span><span class="n">time</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">res</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span> <span class="c1"># not_finished
</span>                <span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">.</span><span class="n">groups</span><span class="p">()</span>
                <span class="n">date</span><span class="o">=</span><span class="s">'-'</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span>
                <span class="n">episodes</span><span class="o">=</span><span class="mi">0</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">res</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="n">tp_movie</span><span class="p">,</span><span class="n">time</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">res</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span> <span class="c1"># a_movie
</span>                    <span class="n">res</span><span class="o">=</span><span class="n">res</span><span class="p">.</span><span class="n">groups</span><span class="p">()</span>
                    <span class="n">date</span><span class="o">=</span><span class="s">'-'</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">3</span><span class="p">])</span>
                    <span class="n">episodes</span><span class="o">=</span><span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">date</span><span class="o">=</span><span class="s">''</span>
                    <span class="n">episodes</span><span class="o">=-</span><span class="mi">1</span>
        
        <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">update</span><span class="p">({</span><span class="s">'tags'</span><span class="p">:</span><span class="n">tags</span><span class="p">,</span><span class="s">'date'</span><span class="p">:</span><span class="n">date</span><span class="p">,</span><span class="s">'episodes'</span><span class="p">:</span><span class="n">episodes</span><span class="p">})</span>
        <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,{</span><span class="s">'tags'</span><span class="p">:</span><span class="n">tags</span><span class="p">,</span><span class="s">'date'</span><span class="p">:</span><span class="n">date</span><span class="p">,</span><span class="s">'episodes'</span><span class="p">:</span><span class="n">episodes</span><span class="p">})</span>
<span class="n">download</span><span class="p">()</span>
</code></pre></div></div>

<ol>
  <li><strong>数据初步清洗</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bilidb2</span><span class="o">=</span><span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bilidb</span><span class="p">)):</span>
    <span class="n">a</span><span class="o">=</span><span class="nb">dict</span><span class="p">()</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="nb">len</span><span class="p">(</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">]):</span>
        <span class="k">continue</span>
    <span class="n">a</span><span class="p">.</span><span class="n">update</span><span class="p">({</span>
            <span class="s">'title'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'title'</span><span class="p">],</span>
            <span class="s">'type_name'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'type_name'</span><span class="p">],</span>
            <span class="s">'season_id'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'season_id'</span><span class="p">],</span>
            <span class="s">'area'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'areas'</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">'name'</span><span class="p">]</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'areas'</span><span class="p">])</span><span class="o">&gt;</span><span class="mi">0</span> <span class="k">else</span> <span class="s">''</span><span class="p">,</span>
            <span class="s">'media_id'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'media_id'</span><span class="p">],</span>
            <span class="s">'rating'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'rating'</span><span class="p">][</span><span class="s">'score'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'rating'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span><span class="p">,</span>
            <span class="s">'raters'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'rating'</span><span class="p">][</span><span class="s">'count'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'rating'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span><span class="p">,</span>
            <span class="s">'cover'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'media'</span><span class="p">][</span><span class="s">'cover'</span><span class="p">],</span>
        
            <span class="s">'follow'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'follow'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'follow'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span><span class="p">,</span>
            <span class="s">'series_follow'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'series_follow'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'series_follow'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span><span class="p">,</span>
            <span class="s">'views'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'views'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'views'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span><span class="p">,</span>
            <span class="s">'coins'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'coins'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'coins'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span><span class="p">,</span>
            <span class="s">'danmakus'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'danmakus'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'danmakus'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span><span class="p">,</span>
            <span class="s">'tags'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'tags'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'tags'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="s">''</span><span class="p">,</span>
            <span class="s">'date'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'date'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'date'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="s">''</span><span class="p">,</span>
            <span class="s">'episodes'</span><span class="p">:</span><span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="s">'episodes'</span><span class="p">]</span> <span class="k">if</span> <span class="s">'episodes'</span> <span class="ow">in</span> <span class="n">bilidb</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">keys</span><span class="p">()</span> <span class="k">else</span> <span class="mi">0</span>
             <span class="p">})</span>
    <span class="n">bilidb2</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="c1"># 添加简介
</span><span class="k">for</span> <span class="n">each_item</span> <span class="ow">in</span> <span class="n">bilidb2</span><span class="p">:</span>
    <span class="n">summary</span><span class="o">=</span><span class="n">summary_dict</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">each_item</span><span class="p">[</span><span class="s">'media_id'</span><span class="p">]))</span>
    <span class="n">each_item</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="s">'简介'</span><span class="p">:</span><span class="n">summary</span> <span class="k">if</span> <span class="n">summary</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span> <span class="k">else</span> <span class="s">''</span><span class="p">})</span>

<span class="n">date</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">localtime</span><span class="p">().</span><span class="n">tm_mon</span><span class="p">)</span><span class="o">+</span><span class="s">'_'</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">localtime</span><span class="p">().</span><span class="n">tm_mday</span><span class="p">)</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">r'bilibili\sslist_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.json'</span><span class="p">,</span><span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">sslist</span><span class="p">,</span><span class="n">fp</span><span class="p">)</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">r'bilibili\mdlist_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.json'</span><span class="p">,</span><span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">mdlist</span><span class="p">,</span><span class="n">fp</span><span class="p">)</span>
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">r'bilibili\bilidb_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.json'</span><span class="p">,</span><span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">bilidb2</span><span class="p">,</span><span class="n">fp</span><span class="p">)</span>

<span class="n">bilidb3</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">bilidb2</span><span class="p">)</span>
<span class="n">bilidb3</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="s">r'bilibili\bilidb_'</span><span class="o">+</span><span class="n">date</span><span class="o">+</span><span class="s">'.csv'</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<p>初步清洗后的数据格式如下：</p>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>title</th>
      <th>type_name</th>
      <th>season_id</th>
      <th>area</th>
      <th>media_id</th>
      <th>rating</th>
      <th>raters</th>
      <th>cover</th>
      <th>follow</th>
      <th>series_follow</th>
      <th>views</th>
      <th>coins</th>
      <th>danmakus</th>
      <th>tags</th>
      <th>date</th>
      <th>episodes</th>
      <th>简介</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>160</th>
      <td>散华礼弥</td>
      <td>番剧</td>
      <td>710</td>
      <td>日本</td>
      <td>710</td>
      <td>9.4</td>
      <td>8016</td>
      <td>http://i0.hdslb.com/bfs/bangumi/6dccd70827dd5f...</td>
      <td>1124707</td>
      <td>1124705</td>
      <td>4384323</td>
      <td>38564</td>
      <td>255295</td>
      <td>奇幻 日常 治愈</td>
      <td>2012-4-5</td>
      <td>4</td>
      <td>毫无特色的少年降谷千纮，就读于县立紫阳高校一年级，是个非常喜爱僵尸的人。少女散华礼弥是散华家...</td>
    </tr>
    <tr>
      <th>161</th>
      <td>恋爱随意链接</td>
      <td>番剧</td>
      <td>713</td>
      <td>日本</td>
      <td>713</td>
      <td>9.5</td>
      <td>9269</td>
      <td>http://i0.hdslb.com/bfs/bangumi/8274f1107032a6...</td>
      <td>730312</td>
      <td>730313</td>
      <td>3206322</td>
      <td>33427</td>
      <td>219865</td>
      <td>日常 少女 校园 小说改</td>
      <td>2012-7-7</td>
      <td>7</td>
      <td>故事发生在私立山星高中，这所学校的文化研究部内，八重樫太一、永濑伊织、稻叶姬子、桐山唯、...</td>
    </tr>
    <tr>
      <th>162</th>
      <td>猫物语（黑）</td>
      <td>番剧</td>
      <td>723</td>
      <td>日本</td>
      <td>723</td>
      <td>9.7</td>
      <td>1926</td>
      <td>http://i0.hdslb.com/bfs/bangumi/d24e532a91234b...</td>
      <td>433136</td>
      <td>433079</td>
      <td>811255</td>
      <td>4162</td>
      <td>12484</td>
      <td>奇幻 声控 小说改 神魔</td>
      <td>2012-12-31</td>
      <td>4</td>
      <td>黄金周的第一天，阿良良木历和班长羽川翼一起埋葬了一只被车碾过，没有尾巴的猫。这本应是一件的普...</td>
    </tr>
  </tbody>
</table>

<ol>
  <li><strong>封面图下载</strong></li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">imgdl</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bilidb</span><span class="p">)):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="s">'</span><span class="se">\r</span><span class="s">'</span><span class="p">)</span>
        <span class="n">url</span><span class="o">=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">cover</span><span class="p">.</span><span class="n">values</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="n">md</span><span class="o">=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">media_id</span><span class="p">.</span><span class="n">values</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        
        <span class="n">try_time</span><span class="o">=</span><span class="mi">0</span>
        <span class="n">httperror</span><span class="o">=</span><span class="bp">False</span>
        <span class="k">while</span> <span class="n">try_time</span><span class="o">&lt;=</span><span class="mi">5</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
                <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
                <span class="k">break</span>
            <span class="k">except</span> <span class="n">ue</span><span class="p">.</span><span class="n">HTTPError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">httperror</span><span class="o">=</span><span class="bp">True</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'Page Not found...skipped'</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="n">try_time</span><span class="o">+=</span><span class="mi">1</span>
                <span class="k">print</span><span class="p">(</span><span class="s">'retrying'</span><span class="p">,</span><span class="n">try_time</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'Download Failed!!'</span><span class="p">)</span>


        <span class="n">content</span><span class="o">=</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
        <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
        
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'bilibili</span><span class="se">\\</span><span class="s">covers</span><span class="se">\\</span><span class="s">'</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">md</span><span class="p">)</span> <span class="o">+</span> <span class="s">'.jpg'</span><span class="p">,</span><span class="s">'wb'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
            <span class="n">fp</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="4-基于pandas的综合数据分析和基于matplotlib的数据可视化">4. 基于pandas的综合数据分析和基于matplotlib的数据可视化</h2>
<h3 id="41-导入依赖库">4.1 导入依赖库</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="nn">scipy</span> <span class="kn">import</span> <span class="n">stats</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span> <span class="k">as</span> <span class="n">bs</span>
<span class="kn">import</span> <span class="nn">urllib.request</span> <span class="k">as</span> <span class="n">ur</span>
<span class="kn">import</span> <span class="nn">urllib.parse</span> <span class="k">as</span> <span class="n">up</span>
<span class="kn">import</span> <span class="nn">urllib.error</span> <span class="k">as</span> <span class="n">ue</span>
<span class="kn">import</span> <span class="nn">http.cookiejar</span> <span class="k">as</span> <span class="n">hc</span>

<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">gzip</span>

<span class="kn">import</span> <span class="nn">json</span>
<span class="o">%</span><span class="n">matplotlib</span> <span class="n">inline</span>
<span class="n">plt</span><span class="p">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'font.sans-serif'</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="s">'SimHei'</span><span class="p">]</span> <span class="c1">#解决符号乱码问题
</span><span class="n">plt</span><span class="p">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s">'axes.unicode_minus'</span><span class="p">]</span><span class="o">=</span><span class="bp">False</span> <span class="c1">#解决中文乱码问题
</span><span class="n">os</span><span class="p">.</span><span class="n">chdir</span><span class="p">(</span><span class="s">r'...'</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="42-数据清洗">4.2 数据清洗</h3>
<h4 id="421-日期型数据处理">4.2.1 日期型数据处理</h4>

<p>对于bilibili的日期格式：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bilidb</span><span class="p">.</span><span class="n">date</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0        2013-1-3
1        2014-7-8
2        2014-7-2
3       2012-10-7
4        2013-7-7
          ...    
3703          NaN
3704          NaN
3705          NaN
3706          NaN
3707          NaN
Name: <span class="nb">date</span>, Length: 3708, dtype: object
</code></pre></div></div>
<p>先将其转换为datetime格式：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bilidb</span><span class="p">.</span><span class="n">date</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">bilidb</span><span class="p">.</span><span class="n">date</span><span class="p">,</span><span class="nb">format</span><span class="o">=</span><span class="s">'%Y-%m-%d'</span><span class="p">,</span><span class="n">errors</span><span class="o">=</span><span class="s">'coerce'</span><span class="p">).</span><span class="n">copy</span><span class="p">()</span>
<span class="n">bilidb</span><span class="p">.</span><span class="n">date</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0      2013-01-03
1      2014-07-08
2      2014-07-02
3      2012-10-07
4      2013-07-07
          ...    
3703          NaT
3704          NaT
3705          NaT
3706          NaT
3707          NaT
Name: <span class="nb">date</span>, Length: 3708, dtype: datetime64[ns]
</code></pre></div></div>
<p>再提取出年份，并转换为int格式，缺失值设为0：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bilidb</span><span class="p">[</span><span class="s">'year'</span><span class="p">]</span><span class="o">=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">date</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="n">year</span><span class="p">)</span>
<span class="n">bilidb</span><span class="p">.</span><span class="n">year</span><span class="o">=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">year</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="mi">0</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">pd</span><span class="p">.</span><span class="n">notna</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">else</span> <span class="nb">int</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
<span class="n">bilidb</span><span class="p">.</span><span class="n">year</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0       2013
1       2014
2       2014
3       2012
4       2013
        ... 
3703       0
3704       0
3705       0
3706       0
3707       0
Name: <span class="nb">date</span>, Length: 3708, dtype: int64
</code></pre></div></div>
<p>对于bangumi，由于多集动画和单集电影的播出时间分处于<code class="language-plaintext highlighter-rouge">放送开始</code>和<code class="language-plaintext highlighter-rouge">上映年度</code>两个键中，故需将其合并后处理。</p>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>放送开始</th>
      <th>上映年度</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1998年10月23日</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2004年1月1日</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2002年10月1日</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2008年10月2日</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1995年10月4日</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>5</th>
      <td>NaN</td>
      <td>1995年11月18日</td>
    </tr>
    <tr>
      <th>6</th>
      <td>NaN</td>
      <td>1997年7月19日</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>8</th>
      <td>2009年4月5日</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>9</th>
      <td>2017年10月14日</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 新建一列，将上映年度和放送开始看做同一类型
</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'日期'</span><span class="p">]</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'放送开始'</span><span class="p">],</span><span class="nb">format</span><span class="o">=</span><span class="s">'%Y年%m月%d日'</span><span class="p">,</span><span class="n">errors</span><span class="o">=</span><span class="s">'coerce'</span><span class="p">)</span>
<span class="n">bgmdb</span><span class="p">[</span><span class="s">'日期2'</span><span class="p">]</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'上映年度'</span><span class="p">],</span><span class="nb">format</span><span class="o">=</span><span class="s">'%Y年%m月%d日'</span><span class="p">,</span><span class="n">errors</span><span class="o">=</span><span class="s">'coerce'</span><span class="p">)</span>
<span class="c1"># 合并日期数据
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'日期'</span><span class="p">])):</span>
    <span class="k">if</span> <span class="n">bgmdb</span><span class="p">[</span><span class="s">'日期'</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="ow">is</span> <span class="n">pd</span><span class="p">.</span><span class="n">NaT</span><span class="p">:</span>
        <span class="n">bgmdb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="s">'日期'</span><span class="p">]</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="s">'日期2'</span><span class="p">]</span>
<span class="n">bgmdb</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="s">'日期2'</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 新增年度数据
</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'年度'</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">)):</span>
    <span class="n">bgmdb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="s">'年度'</span><span class="p">]</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="s">'日期'</span><span class="p">].</span><span class="n">year</span> <span class="k">if</span> <span class="n">bgmdb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="s">'日期'</span><span class="p">]</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">pd</span><span class="p">.</span><span class="n">NaT</span> <span class="k">else</span> <span class="mi">0</span>
    
<span class="n">bgmdb</span><span class="p">[[</span><span class="s">'放送开始'</span><span class="p">,</span><span class="s">'上映年度'</span><span class="p">,</span><span class="s">'日期'</span><span class="p">,</span><span class="s">'年度'</span><span class="p">]].</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div>
<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>放送开始</th>
      <th>上映年度</th>
      <th>日期</th>
      <th>年度</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1998年10月23日</td>
      <td>NaN</td>
      <td>1998-10-23</td>
      <td>1998</td>
    </tr>
    <tr>
      <th>1</th>
      <td>2004年1月1日</td>
      <td>NaN</td>
      <td>2004-01-01</td>
      <td>2004</td>
    </tr>
    <tr>
      <th>2</th>
      <td>2002年10月1日</td>
      <td>NaN</td>
      <td>2002-10-01</td>
      <td>2002</td>
    </tr>
    <tr>
      <th>3</th>
      <td>2008年10月2日</td>
      <td>NaN</td>
      <td>2008-10-02</td>
      <td>2008</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1995年10月4日</td>
      <td>NaN</td>
      <td>1995-10-04</td>
      <td>1995</td>
    </tr>
    <tr>
      <th>5</th>
      <td>NaN</td>
      <td>1995年11月18日</td>
      <td>1995-11-18</td>
      <td>1995</td>
    </tr>
    <tr>
      <th>6</th>
      <td>NaN</td>
      <td>1997年7月19日</td>
      <td>1997-07-19</td>
      <td>1997</td>
    </tr>
    <tr>
      <th>7</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaT</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8</th>
      <td>2009年4月5日</td>
      <td>NaN</td>
      <td>2009-04-05</td>
      <td>2009</td>
    </tr>
    <tr>
      <th>9</th>
      <td>2017年10月14日</td>
      <td>NaN</td>
      <td>2017-10-14</td>
      <td>2017</td>
    </tr>
  </tbody>
</table>

<h4 id="422-bilibili评分缺失值处理">4.2.2 bilibili评分缺失值处理</h4>

<p>需要将评分人数不足的作品的评分及评分人数从0改为nan，以便后面进行剔除：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="o">=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span> <span class="k">if</span> <span class="n">x</span><span class="o">==</span><span class="mi">0</span> <span class="k">else</span> <span class="n">x</span><span class="p">)</span>
<span class="n">bilidb</span><span class="p">.</span><span class="n">raters</span><span class="o">=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">raters</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span> <span class="k">if</span> <span class="n">x</span><span class="o">==</span><span class="mi">0</span> <span class="k">else</span> <span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="43-基本描述统计">4.3 基本描述统计</h3>
<h4 id="431-bilibili评分">4.3.1 bilibili评分</h4>

<ul>
  <li>平均数、中位数</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">),</span>
 <span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">().</span><span class="n">describe</span><span class="p">(),</span>
 <span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">[</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="o">==</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">mode</span><span class="p">()[</span><span class="mi">0</span><span class="p">]].</span><span class="n">count</span><span class="p">())</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>3708,
 count    2581.00000
 mean        9.12592
 std         1.01527
 min         2.20000
 25%         9.10000
 50%         9.50000
 75%         9.70000
 max         9.90000
 Name: rating, dtype: float64,
 431<span class="o">)</span>
</code></pre></div></div>

<p>即在3708部作品中，有2581部有评分，且平均分为9.12分，中位数为9.5分（共431部作品）。</p>

<ul>
  <li>频数分布直方图、正态分布曲线</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>

<span class="n">nx</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mf">0.1</span><span class="p">)</span>
<span class="n">ny</span><span class="o">=</span><span class="n">normfun</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">().</span><span class="n">mean</span><span class="p">(),</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">().</span><span class="n">std</span><span class="p">())</span>
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span><span class="n">ny</span><span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">hist</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">(),</span><span class="n">bins</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">'yellow'</span><span class="p">,</span><span class="n">edgecolor</span><span class="o">=</span><span class="s">'black'</span><span class="p">,</span><span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'bilibili评分频数分布直方图与正态分布曲线'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="mf">2.5</span><span class="p">,</span><span class="mf">0.8</span><span class="p">,</span><span class="s">'average=%.4f</span><span class="se">\n</span><span class="s">std=%.4f'</span><span class="o">%</span><span class="p">(</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">().</span><span class="n">mean</span><span class="p">(),</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">().</span><span class="n">std</span><span class="p">()),</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/bilibili-1.svg" alt="bilibili-1" /></p>

<p>可以看出评分的分布与正态分布相差较大。</p>

<ul>
  <li>票均平均分</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">bilidb</span><span class="p">.</span><span class="n">raters</span><span class="p">.</span><span class="n">dropna</span><span class="p">().</span><span class="nb">sum</span><span class="p">(),</span>
 <span class="p">(</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">()</span><span class="o">*</span><span class="n">bilidb</span><span class="p">.</span><span class="n">raters</span><span class="p">.</span><span class="n">dropna</span><span class="p">()).</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="n">bilidb</span><span class="p">.</span><span class="n">raters</span><span class="p">.</span><span class="nb">sum</span><span class="p">())</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>14881442.0, 8.987174381353636<span class="o">)</span>
</code></pre></div></div>

<p>求得总评分数超过1488万，票均评分为8.99分。</p>

<h4 id="432-bangumi评分">4.3.2 bangumi评分</h4>

<ul>
  <li>平均数、中位数</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>count    5830.000000
mean        6.633856
std         0.880986
min         1.068000
25%         6.127250
50%         6.691500
75%         7.236750
max         9.143000
Name: rating, dtype: float64
</code></pre></div></div>

<p>即在5830部作品中，平均分为6.63分，中位数为6.69分。</p>

<ul>
  <li>频数分布直方图、正态分布曲线</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">101</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>

<span class="n">nx</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mf">0.1</span><span class="p">)</span>
<span class="n">ny</span><span class="o">=</span><span class="n">normfun</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">std</span><span class="p">())</span>
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span><span class="n">ny</span><span class="p">)</span>

<span class="n">ax</span><span class="p">.</span><span class="n">hist</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">,</span><span class="n">bins</span><span class="o">=</span><span class="mi">32</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">'yellow'</span><span class="p">,</span><span class="n">edgecolor</span><span class="o">=</span><span class="s">'black'</span><span class="p">,</span><span class="n">density</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'bangumi评分频数分布直方图与正态分布曲线'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="mf">2.1</span><span class="p">,</span><span class="mf">0.4</span><span class="p">,</span><span class="s">'average=%.4f</span><span class="se">\n</span><span class="s">std=%.4f'</span><span class="o">%</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">mean</span><span class="p">(),</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">std</span><span class="p">()),</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/bangumi-1.svg" alt="bangumi-1" /></p>

<p>可以看出评分的分布与正态分布相当吻合。</p>

<ul>
  <li>票均平均分</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bgmdb</span><span class="p">.</span><span class="n">votes</span><span class="p">.</span><span class="nb">sum</span><span class="p">(),(</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="o">*</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">votes</span><span class="p">).</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">votes</span><span class="p">.</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>4525600, 7.185151881518473<span class="o">)</span>
</code></pre></div></div>

<p>求得总评分数超过452万，票均评分为7.19分。</p>

<h3 id="44-bangumi动画作品数据分析">4.4 bangumi动画作品数据分析</h3>
<h4 id="441-每个动画公司各年度制作了多少动画">4.4.1 每个动画公司各年度制作了多少动画</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 生成年度与动画制作公司的数据交叉表
</span><span class="n">yr_prod</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">crosstab</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'年度'</span><span class="p">],</span><span class="n">columns</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'动画制作'</span><span class="p">])</span>
<span class="c1"># 获取所有不重复的动画制作公司
</span><span class="n">studios</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'动画制作'</span><span class="p">].</span><span class="n">dropna</span><span class="p">().</span><span class="n">unique</span><span class="p">()</span>
<span class="c1"># 建立字典储存动画公司名称与参与制作的作品数
</span><span class="n">studio_dict</span><span class="o">=</span><span class="p">{}</span>
<span class="k">for</span> <span class="n">each_studio</span> <span class="ow">in</span> <span class="n">studios</span><span class="p">:</span>
    <span class="n">studio_dict</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="nb">str</span><span class="p">(</span><span class="n">each_studio</span><span class="p">):</span>
                        <span class="n">bgmdb</span><span class="p">[</span><span class="s">'动画制作'</span><span class="p">].</span><span class="n">dropna</span><span class="p">()[</span>
                            <span class="n">bgmdb</span><span class="p">[</span><span class="s">'动画制作'</span><span class="p">].</span><span class="n">dropna</span><span class="p">().</span><span class="nb">str</span><span class="p">.</span><span class="n">contains</span><span class="p">(</span><span class="n">each_studio</span><span class="p">)</span>
                        <span class="p">].</span><span class="n">count</span><span class="p">()})</span>
<span class="c1"># 转化为series格式
</span><span class="n">studio_dict</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">studio_dict</span><span class="p">)</span>
<span class="c1"># 选取1974年以后，总制作部数排名前20的动画公司的数据展示
</span><span class="n">yr_prod</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span><span class="n">studio_dict</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">index</span><span class="p">.</span><span class="n">tolist</span><span class="p">()[:</span><span class="mi">20</span><span class="p">]][</span><span class="mi">15</span><span class="p">:]</span>
</code></pre></div></div>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>动画制作</th>
      <th>サンライズ</th>
      <th>J.C.STAFF</th>
      <th>東映アニメーション</th>
      <th>MADHOUSE</th>
      <th>Production I.G</th>
      <th>スタジオディーン</th>
      <th>A-1 Pictures</th>
      <th>AIC</th>
      <th>トムス・エンタテインメント</th>
      <th>ぴえろ</th>
      <th>BONES</th>
      <th>シンエイ動画</th>
      <th>XEBEC</th>
      <th>GONZO</th>
      <th>SHAFT</th>
      <th>SILVER LINK.</th>
      <th>京都アニメーション</th>
      <th>オー・エル・エム</th>
      <th>サテライト</th>
      <th>Brain's Base</th>
    </tr>
    <tr>
      <th>年度</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1974</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1975</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1977</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1978</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1979</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1980</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1981</th>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1982</th>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1983</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1984</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1985</th>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1986</th>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1987</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1988</th>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1989</th>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1990</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1991</th>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1992</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1993</th>
      <td>1</td>
      <td>0</td>
      <td>5</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1994</th>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1995</th>
      <td>1</td>
      <td>1</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1996</th>
      <td>2</td>
      <td>1</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1997</th>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1998</th>
      <td>5</td>
      <td>2</td>
      <td>2</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1999</th>
      <td>5</td>
      <td>2</td>
      <td>5</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2000</th>
      <td>3</td>
      <td>2</td>
      <td>4</td>
      <td>7</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>3</td>
      <td>3</td>
      <td>5</td>
      <td>4</td>
      <td>1</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>2</td>
      <td>3</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>6</td>
      <td>3</td>
      <td>4</td>
      <td>5</td>
      <td>3</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>2</td>
      <td>6</td>
      <td>2</td>
      <td>6</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>4</td>
      <td>2</td>
      <td>4</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>6</td>
      <td>1</td>
      <td>2</td>
      <td>5</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>5</td>
      <td>2</td>
      <td>2</td>
      <td>1</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2005</th>
      <td>5</td>
      <td>7</td>
      <td>6</td>
      <td>4</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2006</th>
      <td>7</td>
      <td>5</td>
      <td>8</td>
      <td>10</td>
      <td>4</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2007</th>
      <td>3</td>
      <td>7</td>
      <td>5</td>
      <td>12</td>
      <td>2</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>4</td>
      <td>3</td>
      <td>3</td>
      <td>2</td>
      <td>7</td>
      <td>4</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2008</th>
      <td>4</td>
      <td>7</td>
      <td>4</td>
      <td>11</td>
      <td>6</td>
      <td>6</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>4</td>
      <td>6</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2009</th>
      <td>3</td>
      <td>6</td>
      <td>6</td>
      <td>10</td>
      <td>8</td>
      <td>5</td>
      <td>2</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>1</td>
      <td>6</td>
      <td>0</td>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2010</th>
      <td>4</td>
      <td>8</td>
      <td>4</td>
      <td>6</td>
      <td>5</td>
      <td>3</td>
      <td>8</td>
      <td>4</td>
      <td>3</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
      <td>4</td>
      <td>0</td>
      <td>4</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2011</th>
      <td>4</td>
      <td>7</td>
      <td>7</td>
      <td>7</td>
      <td>9</td>
      <td>4</td>
      <td>6</td>
      <td>1</td>
      <td>3</td>
      <td>2</td>
      <td>11</td>
      <td>2</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2012</th>
      <td>7</td>
      <td>9</td>
      <td>10</td>
      <td>1</td>
      <td>9</td>
      <td>3</td>
      <td>8</td>
      <td>6</td>
      <td>5</td>
      <td>3</td>
      <td>2</td>
      <td>3</td>
      <td>5</td>
      <td>1</td>
      <td>5</td>
      <td>5</td>
      <td>4</td>
      <td>1</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2013</th>
      <td>8</td>
      <td>5</td>
      <td>7</td>
      <td>6</td>
      <td>7</td>
      <td>6</td>
      <td>11</td>
      <td>2</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>5</td>
      <td>5</td>
      <td>3</td>
      <td>3</td>
      <td>5</td>
      <td>3</td>
      <td>5</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2014</th>
      <td>9</td>
      <td>6</td>
      <td>12</td>
      <td>5</td>
      <td>6</td>
      <td>7</td>
      <td>13</td>
      <td>0</td>
      <td>7</td>
      <td>5</td>
      <td>7</td>
      <td>6</td>
      <td>4</td>
      <td>1</td>
      <td>4</td>
      <td>4</td>
      <td>4</td>
      <td>2</td>
      <td>3</td>
      <td>5</td>
    </tr>
    <tr>
      <th>2015</th>
      <td>5</td>
      <td>6</td>
      <td>9</td>
      <td>4</td>
      <td>10</td>
      <td>3</td>
      <td>13</td>
      <td>0</td>
      <td>1</td>
      <td>4</td>
      <td>5</td>
      <td>4</td>
      <td>3</td>
      <td>1</td>
      <td>4</td>
      <td>5</td>
      <td>4</td>
      <td>1</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <th>2016</th>
      <td>7</td>
      <td>8</td>
      <td>10</td>
      <td>2</td>
      <td>2</td>
      <td>9</td>
      <td>17</td>
      <td>0</td>
      <td>3</td>
      <td>4</td>
      <td>8</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>4</td>
      <td>6</td>
      <td>4</td>
      <td>4</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <th>2017</th>
      <td>8</td>
      <td>10</td>
      <td>5</td>
      <td>4</td>
      <td>4</td>
      <td>6</td>
      <td>13</td>
      <td>0</td>
      <td>2</td>
      <td>5</td>
      <td>3</td>
      <td>3</td>
      <td>4</td>
      <td>3</td>
      <td>4</td>
      <td>9</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <th>2018</th>
      <td>6</td>
      <td>11</td>
      <td>6</td>
      <td>6</td>
      <td>4</td>
      <td>7</td>
      <td>6</td>
      <td>0</td>
      <td>5</td>
      <td>4</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
      <td>7</td>
      <td>2</td>
      <td>3</td>
      <td>4</td>
      <td>1</td>
      <td>4</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2019</th>
      <td>4</td>
      <td>11</td>
      <td>3</td>
      <td>5</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>2</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>5</td>
      <td>2</td>
      <td>3</td>
      <td>3</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2020</th>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
    </tr>
  </tbody>
</table>

<h4 id="442-总的动画制作分布">4.4.2 总的动画制作分布</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">104</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="c1"># 选取制作部数排名前17的动画公司，这些动画公司制作的作品数占总数的36%。
</span><span class="n">y</span><span class="o">=</span><span class="n">studio_dict</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">index</span><span class="p">.</span><span class="n">tolist</span><span class="p">()[:</span><span class="mi">17</span><span class="p">]</span>
<span class="n">x</span><span class="o">=</span><span class="n">studio_dict</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">values</span><span class="p">.</span><span class="n">tolist</span><span class="p">()[:</span><span class="mi">17</span><span class="p">]</span>
<span class="n">ax</span><span class="p">.</span><span class="n">pie</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">labels</span><span class="o">=</span><span class="n">y</span><span class="p">,</span><span class="n">autopct</span><span class="o">=</span><span class="s">'%.1f%%'</span><span class="p">,</span><span class="n">pctdistance</span><span class="o">=</span><span class="mf">0.5</span><span class="p">,</span><span class="n">labeldistance</span><span class="o">=</span><span class="mf">1.1</span><span class="p">,</span> \
        <span class="n">startangle</span><span class="o">=</span><span class="mi">120</span><span class="p">,</span><span class="n">radius</span><span class="o">=</span><span class="mf">1.2</span><span class="p">,</span><span class="n">counterclock</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">wedgeprops</span><span class="o">=</span><span class="p">{</span><span class="s">'linewidth'</span><span class="p">:</span><span class="mf">1.5</span><span class="p">,</span><span class="s">'edgecolor'</span><span class="p">:</span><span class="s">'green'</span><span class="p">},</span> \
       <span class="n">textprops</span><span class="o">=</span><span class="p">{</span><span class="s">'fontsize'</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span><span class="s">'color'</span><span class="p">:</span><span class="s">'black'</span><span class="p">})</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'动画制作分布(前%.0f%%作品)'</span><span class="o">%</span><span class="p">(</span>
    <span class="mi">100</span><span class="o">*</span><span class="n">studio_dict</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)[:</span><span class="mi">17</span><span class="p">].</span><span class="nb">sum</span><span class="p">()</span><span class="o">/</span><span class="n">studio_dict</span><span class="p">.</span><span class="nb">sum</span><span class="p">()),</span><span class="n">pad</span><span class="o">=</span><span class="mi">30</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/bangumi-3.svg" alt="bangumi-3" /></p>

<h4 id="443-每个动画公司制作的动画部数及平均评分">4.4.3 每个动画公司制作的动画部数及平均评分</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 动画公司与其片均评分的数据交叉表
</span><span class="n">studios_ratings</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">pivot_table</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">,</span><span class="n">values</span><span class="o">=</span><span class="s">'rating'</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="s">'动画制作'</span><span class="p">,</span><span class="n">aggfunc</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">,</span><span class="n">margins</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">dropna</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 动画公司与其制作部数的数据交叉表
</span><span class="n">studios_counts</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">pivot_table</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">,</span><span class="n">values</span><span class="o">=</span><span class="s">'subject'</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="s">'动画制作'</span><span class="p">,</span><span class="n">aggfunc</span><span class="o">=</span><span class="nb">len</span><span class="p">,</span><span class="n">margins</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">dropna</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c1"># 两表合并，按制作部数取前30位
</span><span class="n">studios_counts_ratings</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">studios_ratings</span><span class="p">,</span><span class="n">studios_counts</span><span class="p">,</span><span class="n">on</span><span class="o">=</span><span class="s">'动画制作'</span><span class="p">).</span><span class="n">sort_values</span><span class="p">(</span>
    <span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="s">'subject'</span><span class="p">,</span><span class="s">'rating'</span><span class="p">],</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span>
<span class="n">studios_counts_ratings</span>
</code></pre></div></div>
<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>subject</th>
    </tr>
    <tr>
      <th>动画制作</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>東映アニメーション</th>
      <td>6.929124</td>
      <td>186</td>
    </tr>
    <tr>
      <th>サンライズ</th>
      <td>7.106657</td>
      <td>178</td>
    </tr>
    <tr>
      <th>J.C.STAFF</th>
      <td>6.810706</td>
      <td>177</td>
    </tr>
    <tr>
      <th>MADHOUSE</th>
      <td>7.092288</td>
      <td>156</td>
    </tr>
    <tr>
      <th>Production I.G</th>
      <td>7.176925</td>
      <td>133</td>
    </tr>
    <tr>
      <th>A-1 Pictures</th>
      <td>6.776467</td>
      <td>122</td>
    </tr>
    <tr>
      <th>スタジオディーン</th>
      <td>6.799629</td>
      <td>116</td>
    </tr>
    <tr>
      <th>BONES</th>
      <td>7.021640</td>
      <td>89</td>
    </tr>
    <tr>
      <th>ぴえろ</th>
      <td>6.644360</td>
      <td>89</td>
    </tr>
    <tr>
      <th>シンエイ動画</th>
      <td>7.067851</td>
      <td>87</td>
    </tr>
    <tr>
      <th>トムス・エンタテインメント</th>
      <td>6.786667</td>
      <td>78</td>
    </tr>
    <tr>
      <th>XEBEC</th>
      <td>6.789254</td>
      <td>67</td>
    </tr>
    <tr>
      <th>GONZO</th>
      <td>6.536925</td>
      <td>67</td>
    </tr>
    <tr>
      <th>京都アニメーション</th>
      <td>7.367710</td>
      <td>62</td>
    </tr>
    <tr>
      <th>SHAFT</th>
      <td>7.434050</td>
      <td>60</td>
    </tr>
    <tr>
      <th>SILVER LINK.</th>
      <td>6.592797</td>
      <td>59</td>
    </tr>
    <tr>
      <th>オー・エル・エム</th>
      <td>6.902265</td>
      <td>49</td>
    </tr>
    <tr>
      <th>動画工房</th>
      <td>6.658000</td>
      <td>48</td>
    </tr>
    <tr>
      <th>サテライト</th>
      <td>6.435106</td>
      <td>47</td>
    </tr>
    <tr>
      <th>Brain's Base</th>
      <td>6.703870</td>
      <td>46</td>
    </tr>
    <tr>
      <th>セブン</th>
      <td>6.138848</td>
      <td>46</td>
    </tr>
    <tr>
      <th>Milky</th>
      <td>5.883156</td>
      <td>45</td>
    </tr>
    <tr>
      <th>AIC</th>
      <td>6.785727</td>
      <td>44</td>
    </tr>
    <tr>
      <th>ZEXCS</th>
      <td>6.272095</td>
      <td>42</td>
    </tr>
    <tr>
      <th>ティーレックス</th>
      <td>5.959929</td>
      <td>42</td>
    </tr>
    <tr>
      <th>アームス</th>
      <td>6.402683</td>
      <td>41</td>
    </tr>
    <tr>
      <th>ラルケ</th>
      <td>6.555162</td>
      <td>37</td>
    </tr>
    <tr>
      <th>diomedéa</th>
      <td>6.198838</td>
      <td>37</td>
    </tr>
    <tr>
      <th>ufotable</th>
      <td>7.170139</td>
      <td>36</td>
    </tr>
    <tr>
      <th>Walt Disney Animation Studios</th>
      <td>7.089556</td>
      <td>36</td>
    </tr>
  </tbody>
</table>

<p>选择其中平均评分最高的10个动画公司：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">studios_counts_ratings</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="p">[</span><span class="s">'rating'</span><span class="p">],</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>rating</th>
      <th>subject</th>
    </tr>
    <tr>
      <th>动画制作</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>SHAFT</th>
      <td>7.434050</td>
      <td>60</td>
    </tr>
    <tr>
      <th>京都アニメーション</th>
      <td>7.367710</td>
      <td>62</td>
    </tr>
    <tr>
      <th>Production I.G</th>
      <td>7.176925</td>
      <td>133</td>
    </tr>
    <tr>
      <th>ufotable</th>
      <td>7.170139</td>
      <td>36</td>
    </tr>
    <tr>
      <th>サンライズ</th>
      <td>7.106657</td>
      <td>178</td>
    </tr>
    <tr>
      <th>MADHOUSE</th>
      <td>7.092288</td>
      <td>156</td>
    </tr>
    <tr>
      <th>シンエイ動画</th>
      <td>7.067851</td>
      <td>87</td>
    </tr>
    <tr>
      <th>BONES</th>
      <td>7.021640</td>
      <td>89</td>
    </tr>
    <tr>
      <th>東映アニメーション</th>
      <td>6.929124</td>
      <td>186</td>
    </tr>
    <tr>
      <th>オー・エル・エム</th>
      <td>6.902265</td>
      <td>49</td>
    </tr>
  </tbody>
</table>

<p>可以看到，SHAFT、京都动画、Production I.G等动画公司出产的作品平均质量较高，这与许多动画爱好者的观点是一致的。</p>

<h4 id="444-2000-2019年热门动画作品及趋势分析">4.4.4 2000-2019年热门动画作品及趋势分析</h4>

<ul>
  <li>各年度代表作（热门作品与高分作品）</li>
</ul>

<p><strong>热门作品</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">.[</span><span class="s">'年度'</span><span class="p">]</span><span class="o">==</span><span class="mi">2000</span><span class="p">].</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'votes'</span><span class="p">,</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">loc</span><span class="p">[:,</span><span class="s">'中文名'</span><span class="p">][:</span><span class="mi">5</span><span class="p">].</span><span class="n">values</span>
<span class="n">a</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2001</span><span class="p">,</span><span class="mi">2020</span><span class="p">):</span>
    <span class="n">b</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">.[</span><span class="s">'年度'</span><span class="p">]</span><span class="o">==</span><span class="n">i</span><span class="p">].</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'votes'</span><span class="p">,</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">loc</span><span class="p">[:,</span><span class="s">'中文名'</span><span class="p">][:</span><span class="mi">5</span><span class="p">].</span><span class="n">values</span>
    <span class="n">b</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">a</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>2000</th>
      <th>2001</th>
      <th>2002</th>
      <th>2003</th>
      <th>2004</th>
      <th>2005</th>
      <th>2006</th>
      <th>2007</th>
      <th>2008</th>
      <th>2009</th>
      <th>2010</th>
      <th>2011</th>
      <th>2012</th>
      <th>2013</th>
      <th>2014</th>
      <th>2015</th>
      <th>2016</th>
      <th>2017</th>
      <th>2018</th>
      <th>2019</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>热度第1名</th>
      <td>犬夜叉</td>
      <td>千与千寻</td>
      <td>攻壳机动队 STAND ALONE COMPLEX</td>
      <td>钢之炼金术师</td>
      <td>混沌武士</td>
      <td>NaN</td>
      <td>Code Geass 反叛的鲁路修</td>
      <td>CLANNAD</td>
      <td>NaN</td>
      <td>化物语</td>
      <td>NaN</td>
      <td>魔法少女小圆</td>
      <td>冰菓</td>
      <td>进击的巨人</td>
      <td>白箱</td>
      <td>吹响！悠风号</td>
      <td>你的名字。</td>
      <td>小林家的龙女仆</td>
      <td>紫罗兰永恒花园</td>
      <td>辉夜大小姐想让我告白～天才们的恋爱头脑战～</td>
    </tr>
    <tr>
      <th>热度第2名</th>
      <td>名侦探柯南 瞳孔中的暗杀者</td>
      <td>棋魂</td>
      <td>全金属狂潮</td>
      <td>全金属狂潮 校园篇</td>
      <td>哈尔的移动城堡</td>
      <td>虫师</td>
      <td>凉宫春日的忧郁</td>
      <td>秒速5厘米</td>
      <td>龙与虎</td>
      <td>钢之炼金术师 FULLMETAL ALCHEMIST</td>
      <td>凉宫春日的消失</td>
      <td>命运石之门</td>
      <td>刀剑神域</td>
      <td>我的青春恋爱物语果然有问题</td>
      <td>月刊少女野崎君</td>
      <td>一拳超人</td>
      <td>Re：从零开始的异世界生活</td>
      <td>来自深渊</td>
      <td>青春笨蛋少年不做兔女郎学姐的梦</td>
      <td>进击的巨人 第三季 Part.2</td>
    </tr>
    <tr>
      <th>热度第3名</th>
      <td>魔卡少女樱 被封印的卡片</td>
      <td>星际牛仔 天国之扉</td>
      <td>火影忍者</td>
      <td>东京教父</td>
      <td>攻壳机动队 S.A.C. 2nd GIG</td>
      <td>灼眼的夏娜</td>
      <td>死亡笔记</td>
      <td>幸运星</td>
      <td>Code Geass 反叛的鲁路修R2</td>
      <td>轻音少女</td>
      <td>无头骑士异闻录</td>
      <td>NaN</td>
      <td>男子高中生的日常</td>
      <td>某科学的超电磁炮S</td>
      <td>Fate/stay night [Unlimited Blade Works]</td>
      <td>Fate/stay night [Unlimited Blade Works] 第二季</td>
      <td>为美好的世界献上祝福！</td>
      <td>情色漫画老师</td>
      <td>比宇宙更远的地方</td>
      <td>鬼灭之刃</td>
    </tr>
    <tr>
      <th>热度第4名</th>
      <td>游戏王－怪兽之决斗</td>
      <td>名侦探柯南 通往天国的倒数计时</td>
      <td>名侦探柯南 贝克街的亡灵</td>
      <td>名侦探柯南 迷宫的十字路口</td>
      <td>妖精的旋律</td>
      <td>搞笑漫画日和</td>
      <td>银魂</td>
      <td>福音战士新剧场版：序</td>
      <td>魔法禁书目录</td>
      <td>某科学的超电磁炮</td>
      <td>我的妹妹哪有这么可爱！</td>
      <td>我们仍未知道那天所看见的花的名字。</td>
      <td>中二病也要谈恋爱！</td>
      <td>斩服少女</td>
      <td>NO GAME NO LIFE 游戏人生</td>
      <td>路人女主的养成方法</td>
      <td>甲铁城的卡巴内利</td>
      <td>少女终末旅行</td>
      <td>DARLING in the FRANXX</td>
      <td>灵能百分百 第二季</td>
    </tr>
    <tr>
      <th>热度第5名</th>
      <td>吸血鬼猎人D：妖杀行</td>
      <td>热带雨林的爆笑生活</td>
      <td>人形电脑天使心</td>
      <td>奇诺之旅</td>
      <td>攻壳机动队2 无罪</td>
      <td>蜂蜜与四叶草</td>
      <td>NaN</td>
      <td>永生之酒</td>
      <td>夏目友人帐</td>
      <td>凉宫春日的忧郁 2009</td>
      <td>轻音少女 第二季</td>
      <td>日常</td>
      <td>心理测量者</td>
      <td>打工吧！魔王大人</td>
      <td>四月是你的谎言</td>
      <td>我的青春恋爱物语果然有问题 续</td>
      <td>灵能百分百</td>
      <td>进击的巨人 第二季</td>
      <td>佐贺偶像是传奇</td>
      <td>约定的梦幻岛</td>
    </tr>
  </tbody>
</table>

<p><strong>高分作品</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'年度'</span><span class="p">]</span><span class="o">==</span><span class="mi">2000</span><span class="p">].</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'rating'</span><span class="p">,</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">loc</span><span class="p">[:,</span><span class="s">'中文名'</span><span class="p">][:</span><span class="mi">5</span><span class="p">].</span><span class="n">values</span>
<span class="n">a</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2001</span><span class="p">,</span><span class="mi">2020</span><span class="p">):</span>
    <span class="n">b</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'年度'</span><span class="p">]</span><span class="o">==</span><span class="n">i</span><span class="p">].</span><span class="n">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'rating'</span><span class="p">,</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">loc</span><span class="p">[:,</span><span class="s">'中文名'</span><span class="p">][:</span><span class="mi">5</span><span class="p">].</span><span class="n">values</span>
    <span class="n">b</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">a</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">concatenate</span><span class="p">([</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">a</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="p">[</span><span class="s">'评分第%d名'</span><span class="o">%</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">6</span><span class="p">)],</span><span class="n">columns</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">2020</span><span class="p">))</span>
</code></pre></div></div>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>2000</th>
      <th>2001</th>
      <th>2002</th>
      <th>2003</th>
      <th>2004</th>
      <th>2005</th>
      <th>2006</th>
      <th>2007</th>
      <th>2008</th>
      <th>2009</th>
      <th>2010</th>
      <th>2011</th>
      <th>2012</th>
      <th>2013</th>
      <th>2014</th>
      <th>2015</th>
      <th>2016</th>
      <th>2017</th>
      <th>2018</th>
      <th>2019</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>评分第1名</th>
      <td>第一神拳</td>
      <td>千与千寻</td>
      <td>攻壳机动队 STAND ALONE COMPLEX</td>
      <td>百变之星</td>
      <td>攻壳机动队 S.A.C. 2nd GIG</td>
      <td>虫师</td>
      <td>银魂</td>
      <td>天元突破 红莲螺岩</td>
      <td>NaN</td>
      <td>钢之炼金术师 FULLMETAL ALCHEMIST</td>
      <td>凉宫春日的消失</td>
      <td>银魂'</td>
      <td>银魂' 延长战</td>
      <td>歌牌情缘2</td>
      <td>白箱</td>
      <td>水星领航员 The AVVENIRE</td>
      <td>排球少年 乌野高校 VS 白鸟泽学园高校</td>
      <td>3月的狮子 第二季</td>
      <td>莉兹与青鸟</td>
      <td>进击的巨人 第三季 Part.2</td>
    </tr>
    <tr>
      <th>评分第2名</th>
      <td>吸血鬼猎人D：妖杀行</td>
      <td>星际牛仔 天国之扉</td>
      <td>小魔女DoReMi 大合奏</td>
      <td>钢之炼金术师</td>
      <td>攻壳机动队2 无罪</td>
      <td>蜂蜜与四叶草</td>
      <td>蜂蜜与四叶草II</td>
      <td>CLANNAD</td>
      <td>水星领航员 第三季</td>
      <td>福音战士新剧场版：破</td>
      <td>四叠半神话大系</td>
      <td>命运石之门</td>
      <td>爆漫王。3</td>
      <td>剧场版 魔法少女小圆 剧场版 [新篇] 叛逆的物语</td>
      <td>虫师 续章 第2期</td>
      <td>少女与战车 剧场版</td>
      <td>3月的狮子</td>
      <td>昭和元禄落语心中 -助六再临篇-</td>
      <td>强风吹拂</td>
      <td>瑞克和莫蒂 第四季</td>
    </tr>
    <tr>
      <th>评分第3名</th>
      <td>游戏王－怪兽之决斗</td>
      <td>棋魂</td>
      <td>十二国记</td>
      <td>星空清理者</td>
      <td>混沌武士</td>
      <td>哆啦A梦</td>
      <td>盗梦侦探</td>
      <td>福音战士新剧场版：序</td>
      <td>攻壳机动队2.0</td>
      <td>化物语</td>
      <td>Heart Catch 光之美少女!</td>
      <td>魔法少女小圆</td>
      <td>来自新世界</td>
      <td>小马驹G4 第四季</td>
      <td>虫师 续章</td>
      <td>排球少年 第二季</td>
      <td>吹响！悠风号 第二季</td>
      <td>来自深渊</td>
      <td>比宇宙更远的地方</td>
      <td>高分少女 第二季</td>
    </tr>
    <tr>
      <th>评分第4名</th>
      <td>小魔女DoReMi ♯</td>
      <td>蜡笔小新 呼风唤雨！大人帝国的反击</td>
      <td>萩萩公主</td>
      <td>东京教父</td>
      <td>怪物</td>
      <td>水星领航员</td>
      <td>死亡笔记</td>
      <td>物怪</td>
      <td>剧场版 空之境界 第五章 矛盾螺旋</td>
      <td>天元突破红莲螺岩 螺岩篇</td>
      <td>王牌投手 振臂高挥～夏日大会篇～</td>
      <td>日常</td>
      <td>JOJO的奇妙冒险</td>
      <td>辉夜姬物语</td>
      <td>乒乓</td>
      <td>JOJO的奇妙冒险 星尘斗士 埃及篇</td>
      <td>昭和元禄落语心中</td>
      <td>春宵苦短，少女前进吧！</td>
      <td>摇曳露营△</td>
      <td>海盗战记</td>
    </tr>
    <tr>
      <th>评分第5名</th>
      <td>魔卡少女樱 被封印的卡片</td>
      <td>大~集合！小魔女DoReMi</td>
      <td>阿滋漫画大王</td>
      <td>全金属狂潮 校园篇</td>
      <td>飞跃巅峰2！</td>
      <td>交响诗篇</td>
      <td>攻壳机动队 S.A.C. Solid State Society</td>
      <td>永生之酒</td>
      <td>Code Geass 反叛的鲁路修R2</td>
      <td>剧场版 空之境界 第七章 杀人考察（后）</td>
      <td>小马驹G4 第一季</td>
      <td>夏目友人帐 参</td>
      <td>冰菓</td>
      <td>宇宙战舰大和号2199</td>
      <td>怪诞小镇 第二季</td>
      <td>虫师 续章 铃之雫</td>
      <td>你的名字。</td>
      <td>终物语（下）</td>
      <td>JOJO的奇妙冒险 黄金之风</td>
      <td>灵能百分百 第二季</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>各年度动画作品进入排行榜前100的数量</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bgmdb_by_year</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'年度'</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">count_rank</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
    <span class="n">count</span><span class="o">=</span><span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">:</span>
            <span class="n">count</span><span class="o">+=</span><span class="mi">1</span>
    <span class="k">return</span> <span class="n">count</span>
<span class="n">TOP100_by_year</span><span class="o">=</span><span class="n">bgmdb_by_year</span><span class="p">.</span><span class="n">bgmrank</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="n">count_rank</span><span class="p">)[</span><span class="o">-</span><span class="mi">21</span><span class="p">:</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">TOP100_by_year</span><span class="p">)</span>

<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">112</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span> 
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">TOP100_by_year</span><span class="p">.</span><span class="n">index</span><span class="p">,</span><span class="n">TOP100_by_year</span><span class="p">.</span><span class="n">values</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">'各年度TOP100进榜数量'</span><span class="p">,</span><span class="n">xticks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">2019</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>年度
2000    0
2001    3
2002    3
2003    3
2004    4
2005    3
2006    7
2007    4
2008    4
2009    2
2010    3
2011    4
2012    2
2013    2
2014    7
2015    5
2016    1
2017    2
2018    1
2019    1
</code></pre></div></div>

<p><img src="/assets/images/200628/bangumi-5.svg" alt="bangumi-5" /></p>

<p>可以看到，在2006年和2014年，优质作品出现井喷现象，但近几年来优质作品减少趋势明显。</p>

<ul>
  <li>各年度动画作品前10名评分走势</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">TOP10</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="p">[</span>
    <span class="n">bgmdb</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'年度'</span><span class="p">]</span><span class="o">==</span><span class="n">i</span><span class="p">].</span><span class="n">sort_values</span><span class="p">(</span>
    <span class="n">by</span><span class="o">=</span><span class="s">'rating'</span><span class="p">,</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">loc</span><span class="p">[:,</span><span class="s">'rating'</span><span class="p">][:</span><span class="mi">10</span><span class="p">].</span><span class="n">mean</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">2020</span><span class="p">)</span>
    <span class="p">],</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'TOP10均分'</span><span class="p">],</span><span class="n">index</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">2020</span><span class="p">))</span>

<span class="n">TOP10</span>
</code></pre></div></div>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TOP10均分</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2000</th>
      <td>7.7456</td>
    </tr>
    <tr>
      <th>2001</th>
      <td>8.0019</td>
    </tr>
    <tr>
      <th>2002</th>
      <td>8.0241</td>
    </tr>
    <tr>
      <th>2003</th>
      <td>8.1159</td>
    </tr>
    <tr>
      <th>2004</th>
      <td>8.2890</td>
    </tr>
    <tr>
      <th>2005</th>
      <td>8.1902</td>
    </tr>
    <tr>
      <th>2006</th>
      <td>8.3470</td>
    </tr>
    <tr>
      <th>2007</th>
      <td>8.2656</td>
    </tr>
    <tr>
      <th>2008</th>
      <td>8.3198</td>
    </tr>
    <tr>
      <th>2009</th>
      <td>8.2012</td>
    </tr>
    <tr>
      <th>2010</th>
      <td>8.1866</td>
    </tr>
    <tr>
      <th>2011</th>
      <td>8.3057</td>
    </tr>
    <tr>
      <th>2012</th>
      <td>8.1612</td>
    </tr>
    <tr>
      <th>2013</th>
      <td>8.0661</td>
    </tr>
    <tr>
      <th>2014</th>
      <td>8.3658</td>
    </tr>
    <tr>
      <th>2015</th>
      <td>8.2285</td>
    </tr>
    <tr>
      <th>2016</th>
      <td>8.0552</td>
    </tr>
    <tr>
      <th>2017</th>
      <td>8.1678</td>
    </tr>
    <tr>
      <th>2018</th>
      <td>8.1140</td>
    </tr>
    <tr>
      <th>2019</th>
      <td>8.1075</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">111</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span> 
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">TOP10</span><span class="p">.</span><span class="n">index</span><span class="p">,</span><span class="n">TOP10</span><span class="p">.</span><span class="n">values</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">'TOP10均分走势'</span><span class="p">,</span><span class="n">xticks</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2000</span><span class="p">,</span><span class="mi">2019</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/bangumi-4.svg" alt="bangumi-4" /></p>

<h3 id="45-两站动画匹配与数据库的合并">4.5 两站动画匹配与数据库的合并</h3>
<h4 id="451-匹配策略">4.5.1 匹配策略</h4>

<p>注意到bilibili的搜索功能，可以搜索到对应作品的md号：</p>

<p><img src="/assets/images/200628/bilibili-search.png" alt="bilibili-search" /></p>

<p>故采取以下的匹配策略：</p>

<ol>
  <li>导入bangumi的数据</li>
  <li>按照日文原名和中文名向search.bilibili.com发出查询请求</li>
  <li>从查询结果中提取番剧链接（md号）</li>
  <li>根据名称、年份等信息进行匹配，得到匹配接口（subject-md）</li>
</ol>

<h4 id="452-查询脚本">4.5.2 查询脚本</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">url</span><span class="o">=</span><span class="s">'https://search.bilibili.com/all?'</span>
<span class="n">pattern</span><span class="o">=</span><span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'www.bilibili.com/bangumi/media/md(.*?)/'</span><span class="p">)</span>
<span class="n">interface</span><span class="o">=</span><span class="nb">dict</span><span class="p">()</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">bgmdb</span><span class="p">)):</span>
    <span class="n">res</span><span class="o">=</span><span class="p">[]</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'item'</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="s">'searching'</span><span class="p">,</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'原名'</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
    <span class="n">querystring</span><span class="o">=</span><span class="p">{</span><span class="s">'keyword'</span><span class="p">:</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'原名'</span><span class="p">][</span><span class="n">i</span><span class="p">]}</span>
    <span class="n">querystring</span><span class="o">=</span><span class="n">up</span><span class="p">.</span><span class="n">urlencode</span><span class="p">(</span><span class="n">querystring</span><span class="p">)</span>
    <span class="n">final_url</span><span class="o">=</span><span class="n">url</span><span class="o">+</span><span class="n">querystring</span>

    <span class="n">try_succeed</span><span class="o">=</span><span class="bp">False</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">try_succeed</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">try_succeed</span><span class="o">=</span><span class="bp">True</span>
            <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">final_url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
            <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="n">try_succeed</span><span class="o">=</span><span class="bp">False</span>
            <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="s">'URL timeout! retrying...'</span><span class="p">)</span>

    <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span>
    <span class="n">res</span><span class="p">.</span><span class="n">extend</span><span class="p">(</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span><span class="n">content</span><span class="p">))</span>
    <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    
    <span class="k">print</span><span class="p">(</span><span class="s">'item'</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="s">'searching'</span><span class="p">,</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'中文名'</span><span class="p">][</span><span class="n">i</span><span class="p">])</span>
    <span class="n">querystring</span><span class="o">=</span><span class="p">{</span><span class="s">'keyword'</span><span class="p">:</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'中文名'</span><span class="p">][</span><span class="n">i</span><span class="p">]}</span>
    <span class="n">querystring</span><span class="o">=</span><span class="n">up</span><span class="p">.</span><span class="n">urlencode</span><span class="p">(</span><span class="n">querystring</span><span class="p">)</span>
    <span class="n">final_url</span><span class="o">=</span><span class="n">url</span><span class="o">+</span><span class="n">querystring</span>

    <span class="n">try_succeed</span><span class="o">=</span><span class="bp">False</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">try_succeed</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">try_succeed</span><span class="o">=</span><span class="bp">True</span>
            <span class="n">r</span><span class="o">=</span><span class="n">ur</span><span class="p">.</span><span class="n">Request</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">final_url</span><span class="p">,</span><span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
            <span class="n">response</span><span class="o">=</span><span class="n">opener</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="n">r</span><span class="p">)</span> 
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="n">try_succeed</span><span class="o">=</span><span class="bp">False</span>
            <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="s">'URL timeout! retrying...'</span><span class="p">)</span>
    
    <span class="n">content</span><span class="o">=</span><span class="nb">str</span><span class="p">(</span><span class="n">gzip</span><span class="p">.</span><span class="n">decompress</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span><span class="s">'utf-8'</span><span class="p">)</span>
    <span class="n">res</span><span class="p">.</span><span class="n">extend</span><span class="p">(</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">pattern</span><span class="p">,</span><span class="n">content</span><span class="p">))</span>
    <span class="n">response</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
    
    <span class="n">res</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">res</span><span class="p">))</span>
    <span class="n">interface</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'subject'</span><span class="p">][</span><span class="n">i</span><span class="p">]:</span><span class="n">res</span><span class="p">})</span>
    <span class="k">print</span><span class="p">({</span><span class="n">bgmdb</span><span class="p">[</span><span class="s">'subject'</span><span class="p">][</span><span class="n">i</span><span class="p">]:</span><span class="n">res</span><span class="p">})</span>
    
<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'bangumi</span><span class="se">\\</span><span class="s">interfaces</span><span class="se">\\</span><span class="s">origin-subject2md.json'</span><span class="p">,</span><span class="s">'w'</span><span class="p">)</span> <span class="k">as</span> <span class="n">fp</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">interface</span><span class="p">,</span><span class="n">fp</span><span class="p">)</span>
</code></pre></div></div>

<p>接口格式：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>253: <span class="o">[</span><span class="s1">'8023271'</span>, <span class="s1">'3008'</span>, <span class="s1">'5383'</span><span class="o">]</span>,
 326: <span class="o">[</span><span class="s1">'1714'</span>, <span class="s1">'1705'</span>, <span class="s1">'1565'</span><span class="o">]</span>,
 324: <span class="o">[</span><span class="s1">'1564'</span>, <span class="s1">'1712'</span>, <span class="s1">'1705'</span><span class="o">]</span>,
 876: <span class="o">[</span><span class="s1">'1178'</span>, <span class="s1">'1180'</span><span class="o">]</span>,
 265: <span class="o">[</span><span class="s1">'10352'</span>, <span class="s1">'10372'</span>, <span class="s1">'10332'</span>, <span class="s1">'1635'</span><span class="o">]</span>,
 237: <span class="o">[</span><span class="s1">'1714'</span>, <span class="s1">'1568'</span>, <span class="s1">'1566'</span>, <span class="s1">'28228268'</span><span class="o">]</span>,
 6049: <span class="o">[</span><span class="s1">'10272'</span><span class="o">]</span>,
...<span class="o">}</span>
</code></pre></div></div>

<h4 id="453-信息匹配">4.5.3 信息匹配</h4>

<p>首先，过滤掉没有搜索结果的键值对：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">interface2</span><span class="o">=</span><span class="p">{}</span>
<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">interface</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">v</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">:</span>
        <span class="n">v</span><span class="o">=</span><span class="p">[</span><span class="nb">int</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">v</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">interface2</span><span class="p">.</span><span class="n">update</span><span class="p">({</span><span class="nb">int</span><span class="p">(</span><span class="n">k</span><span class="p">):</span><span class="n">v</span><span class="p">})</span>
</code></pre></div></div>

<p>然后，将subject号对应的bangumi信息对接，同时将md号对应的bilibili信息对接，生成新的字典</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">interface3</span><span class="o">=</span><span class="nb">list</span><span class="p">()</span>
<span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">interface2</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="n">bgm</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">subject</span><span class="o">==</span><span class="n">k</span><span class="p">,[</span><span class="s">'年度'</span><span class="p">,</span><span class="s">'subject'</span><span class="p">,</span><span class="s">'原名'</span><span class="p">,</span><span class="s">'中文名'</span><span class="p">,</span><span class="s">'别名'</span><span class="p">,</span><span class="s">'日期'</span><span class="p">]].</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    
    <span class="n">bili</span><span class="o">=</span><span class="p">[</span><span class="n">bilidb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">bilidb</span><span class="p">.</span><span class="n">media_id</span><span class="o">==</span><span class="n">each_bilimd</span><span class="p">,[</span><span class="s">'year'</span><span class="p">,</span><span class="s">'media_id'</span><span class="p">,</span><span class="s">'title'</span><span class="p">,</span><span class="s">'date'</span><span class="p">]].</span><span class="n">values</span> <span class="k">for</span> <span class="n">each_bilimd</span> <span class="ow">in</span> <span class="n">v</span><span class="p">]</span>
    
    <span class="n">bili</span><span class="o">=</span><span class="p">[</span><span class="n">each_bilimd</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">each_bilimd</span> <span class="ow">in</span> <span class="n">bili</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">each_bilimd</span><span class="p">)]</span>
    <span class="n">interface3</span><span class="p">.</span><span class="n">append</span><span class="p">({</span><span class="s">'bgm'</span><span class="p">:</span><span class="n">bgm</span><span class="p">,</span><span class="s">'bili'</span><span class="p">:</span><span class="n">bili</span><span class="p">})</span>

<span class="n">interface3</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[{</span><span class="s1">'bgm'</span>: array<span class="o">([</span>1998, 253, <span class="s1">'カウボーイビバップ'</span>, <span class="s1">'星际牛仔'</span>, <span class="s1">'恶男杰特'</span>,
         Timestamp<span class="o">(</span><span class="s1">'1998-10-23 00:00:00'</span><span class="o">)]</span>, <span class="nv">dtype</span><span class="o">=</span>object<span class="o">)</span>,
  <span class="s1">'bili'</span>: <span class="o">[</span>array<span class="o">([</span>2001, 3008, <span class="s1">'星际牛仔 天国之扉'</span>, Timestamp<span class="o">(</span><span class="s1">'2001-09-01 00:00:00'</span><span class="o">)]</span>,
         <span class="nv">dtype</span><span class="o">=</span>object<span class="o">)</span>,
   array<span class="o">([</span>1998, 5383, <span class="s1">'星际牛仔 SP'</span>, Timestamp<span class="o">(</span><span class="s1">'1998-10-23 00:00:00'</span><span class="o">)]</span>,
         <span class="nv">dtype</span><span class="o">=</span>object<span class="o">)]}</span>,
 <span class="o">{</span><span class="s1">'bgm'</span>: array<span class="o">([</span>2004, 326, <span class="s1">'攻殻機動隊 S.A.C. 2nd GIG'</span>, <span class="s1">'攻壳机动队 S.A.C. 2nd GIG'</span>, nan,
         Timestamp<span class="o">(</span><span class="s1">'2004-01-01 00:00:00'</span><span class="o">)]</span>, <span class="nv">dtype</span><span class="o">=</span>object<span class="o">)</span>,
  <span class="s1">'bili'</span>: <span class="o">[</span>array<span class="o">([</span>2006, 1714, <span class="s1">'攻壳机动队 个别的十一人'</span>, Timestamp<span class="o">(</span><span class="s1">'2006-01-27 00:00:00'</span><span class="o">)]</span>,
         <span class="nv">dtype</span><span class="o">=</span>object<span class="o">)</span>,
   array<span class="o">([</span>2006, 1705, <span class="s1">'攻壳机动队 S.A.C. Solid State Society'</span>,
          Timestamp<span class="o">(</span><span class="s1">'2006-09-01 00:00:00'</span><span class="o">)]</span>, <span class="nv">dtype</span><span class="o">=</span>object<span class="o">)</span>,
   array<span class="o">([</span>2004, 1565, <span class="s1">'攻壳机动队 S.A.C. 2nd GIG'</span>,
          Timestamp<span class="o">(</span><span class="s1">'2004-01-01 00:00:00'</span><span class="o">)]</span>, <span class="nv">dtype</span><span class="o">=</span>object<span class="o">)]}</span>,
...]
</code></pre></div></div>

<p>接着，寻找名称和年份相同的作品，存入fullymatched列表：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">matched</span><span class="o">=</span><span class="p">[]</span>
<span class="k">for</span> <span class="n">searchres</span> <span class="ow">in</span> <span class="n">interface3</span><span class="p">:</span>
    <span class="n">bgm</span><span class="o">=</span><span class="n">searchres</span><span class="p">[</span><span class="s">'bgm'</span><span class="p">]</span>
    <span class="n">bili</span><span class="o">=</span><span class="n">searchres</span><span class="p">[</span><span class="s">'bili'</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">bilimd</span> <span class="ow">in</span> <span class="n">bili</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">bgmname</span> <span class="ow">in</span> <span class="n">bgm</span><span class="p">[</span><span class="mi">2</span><span class="p">:</span><span class="mi">5</span><span class="p">]:</span>
            <span class="k">if</span> <span class="n">bilimd</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="n">bgmname</span> <span class="ow">and</span> <span class="n">bilimd</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="n">bgm</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
                <span class="n">matched</span><span class="p">.</span><span class="n">append</span><span class="p">({</span><span class="s">'subject'</span><span class="p">:</span><span class="n">bgm</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="s">'md'</span><span class="p">:</span><span class="n">bilimd</span><span class="p">[</span><span class="mi">1</span><span class="p">]})</span>

<span class="kn">import</span> <span class="nn">copy</span>
<span class="n">fullymatched</span><span class="o">=</span><span class="n">copy</span><span class="p">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">matched</span><span class="p">)</span>
</code></pre></div></div>

<p>然后，寻找名称不同但开播日期相同的作品，进行人工匹配，结果保存在manuallymatched中：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">matched</span><span class="o">=</span><span class="p">[]</span>
<span class="k">for</span> <span class="n">searchres</span> <span class="ow">in</span> <span class="n">interface3</span><span class="p">:</span>
    <span class="n">bgm</span><span class="o">=</span><span class="n">searchres</span><span class="p">[</span><span class="s">'bgm'</span><span class="p">]</span>
    <span class="n">bili</span><span class="o">=</span><span class="n">searchres</span><span class="p">[</span><span class="s">'bili'</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">bilimd</span> <span class="ow">in</span> <span class="n">bili</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">bilimd</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">bgm</span> <span class="ow">and</span> <span class="p">(</span><span class="n">bilimd</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">pd</span><span class="p">.</span><span class="n">NaT</span> <span class="ow">and</span> <span class="n">bilimd</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">==</span><span class="n">bgm</span><span class="p">[</span><span class="mi">5</span><span class="p">]):</span>
            <span class="n">matched</span><span class="p">.</span><span class="n">append</span><span class="p">({</span><span class="s">'bgm'</span><span class="p">:</span><span class="n">bgm</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="s">'bili'</span><span class="p">:</span><span class="n">bilimd</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]})</span>
<span class="p">...</span>
</code></pre></div></div>
<p>最后，将两列表转换成DataFrame格式并合并去重，得到最终匹配结果：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fullymatched</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">fullymatched</span><span class="p">)</span>
<span class="n">manuallymatched</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">manuallymatched</span><span class="p">)</span>
<span class="n">finalmatch</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">fullymatched</span><span class="p">,</span><span class="n">manuallymatched</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
<span class="n">finalmatch</span><span class="p">.</span><span class="n">drop_duplicates</span><span class="p">(</span><span class="n">subset</span><span class="o">=</span><span class="s">'subject'</span><span class="p">,</span><span class="n">keep</span><span class="o">=</span><span class="s">'first'</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="nb">len</span><span class="p">(</span><span class="n">finalmatch</span><span class="p">),</span><span class="n">finalmatch</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>1837,
   subject    md
 0     326  1565
 1     324  1564
 2     876  1178
 3    1428  1089
 4  211567  6445<span class="o">)</span>
</code></pre></div></div>

<p>最终匹配到了1837部作品。</p>

<h4 id="454-数据库合并">4.5.4 数据库合并</h4>

<p>使用匹配接口，将两个DataFrame合并。首先将接口与bilidb按md号内连接，然后再用bilidb与bgmdb按subject号内连接，并进行一系列调整，最终获得合并后的数据库：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">bilidb</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="n">finalmatch</span><span class="p">,</span><span class="n">right</span><span class="o">=</span><span class="n">bilidb</span><span class="p">,</span><span class="n">left_on</span><span class="o">=</span><span class="s">'md'</span><span class="p">,</span><span class="n">right_on</span><span class="o">=</span><span class="s">'media_id'</span><span class="p">,</span><span class="n">how</span><span class="o">=</span><span class="s">'inner'</span><span class="p">)</span>
<span class="n">db</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">merge</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="n">bilidb</span><span class="p">,</span><span class="n">right</span><span class="o">=</span><span class="n">bgmdb</span><span class="p">,</span><span class="n">on</span><span class="o">=</span><span class="s">'subject'</span><span class="p">,</span><span class="n">how</span><span class="o">=</span><span class="s">'inner'</span><span class="p">)</span>
<span class="n">db</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">[</span><span class="s">'md'</span><span class="p">],</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">db</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">'rating_x'</span><span class="p">:</span><span class="s">'bilirating'</span><span class="p">,</span><span class="s">'rating_y'</span><span class="p">:</span><span class="s">'bgmrating'</span><span class="p">},</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="n">db</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>subject</th>
      <th>title</th>
      <th>type_name</th>
      <th>season_id</th>
      <th>area</th>
      <th>media_id</th>
      <th>bilirating</th>
      <th>raters</th>
      <th>cover</th>
      <th>follow</th>
      <th>...</th>
      <th>开始</th>
      <th>结束</th>
      <th>片长</th>
      <th>主题歌编曲</th>
      <th>第二原画</th>
      <th>音响</th>
      <th>特效</th>
      <th>机械设定</th>
      <th>日期</th>
      <th>年度</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>326</td>
      <td>攻壳机动队 S.A.C. 2nd GIG</td>
      <td>番剧</td>
      <td>1565</td>
      <td>日本</td>
      <td>1565</td>
      <td>9.8</td>
      <td>2045.0</td>
      <td>http://i0.hdslb.com/bfs/bangumi/00ee95c464defb...</td>
      <td>152857</td>
      <td>...</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>菅野よう子</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>村上正博</td>
      <td>常木志伸、寺岡賢司</td>
      <td>2004-01-01</td>
      <td>2004</td>
    </tr>
    <tr>
      <th>1</th>
      <td>324</td>
      <td>攻壳机动队 STAND ALONE COMPLEX</td>
      <td>番剧</td>
      <td>1564</td>
      <td>日本</td>
      <td>1564</td>
      <td>9.8</td>
      <td>3511.0</td>
      <td>http://i0.hdslb.com/bfs/bangumi/6ebd07ba376115...</td>
      <td>516939</td>
      <td>...</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>菅野よう子</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>遠藤誠、村上正博</td>
      <td>寺岡賢司、常木志伸</td>
      <td>2002-10-01</td>
      <td>2002</td>
    </tr>
    <tr>
      <th>2</th>
      <td>876</td>
      <td>CLANNAD ～AFTER STORY～</td>
      <td>番剧</td>
      <td>1178</td>
      <td>日本</td>
      <td>1178</td>
      <td>9.9</td>
      <td>42904.0</td>
      <td>http://i0.hdslb.com/bfs/bangumi/54003a09e72f0d...</td>
      <td>917778</td>
      <td>...</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>ANANT-GARDE EYES</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>2008-10-02</td>
      <td>2008</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1428</td>
      <td>钢之炼金术师 FULLMETAL ALCHEMIST</td>
      <td>番剧</td>
      <td>1089</td>
      <td>日本</td>
      <td>1089</td>
      <td>9.9</td>
      <td>80126.0</td>
      <td>http://i0.hdslb.com/bfs/bangumi/401f84cadca354...</td>
      <td>1990896</td>
      <td>...</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>大橋卓弥、常田真太郎</td>
      <td>関本美穂</td>
      <td>テクノサウンド</td>
      <td>龍角里美、池上真崇</td>
      <td>鈴木雅久</td>
      <td>2009-04-05</td>
      <td>2009</td>
    </tr>
    <tr>
      <th>4</th>
      <td>211567</td>
      <td>3月的狮子 第二季</td>
      <td>番剧</td>
      <td>6445</td>
      <td>日本</td>
      <td>6445</td>
      <td>9.8</td>
      <td>15230.0</td>
      <td>http://i0.hdslb.com/bfs/bangumi/14cf90e4ea9a05...</td>
      <td>480677</td>
      <td>...</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>谷口工作、吉澤翠</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
      <td>2017-10-14</td>
      <td>2017</td>
    </tr>
  </tbody>
</table>

<h3 id="46-两站评分综合分析">4.6 两站评分综合分析</h3>

<h4 id="461-相关性分析与散点图">4.6.1 相关性分析与散点图</h4>

<ul>
  <li>线性回归</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">res</span><span class="o">=</span><span class="n">stats</span><span class="p">.</span><span class="n">linregress</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">bgmrating</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">bilirating</span><span class="p">)</span>
<span class="n">res</span><span class="p">,</span><span class="n">res</span><span class="p">.</span><span class="n">rvalue</span><span class="o">**</span><span class="mi">2</span>
</code></pre></div></div>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>LinregressResult<span class="o">(</span><span class="nv">slope</span><span class="o">=</span>0.8046754433744006, <span class="nv">intercept</span><span class="o">=</span>3.709341364364734, <span class="nv">rvalue</span><span class="o">=</span>0.736131603271121, <span class="nv">pvalue</span><span class="o">=</span>7.026688311545783e-200, <span class="nv">stderr</span><span class="o">=</span>0.02166711159881075<span class="o">)</span>,
 0.5418897373345112<span class="o">)</span>
</code></pre></div></div>
<p>拟合得到bili=0.80bgm+3.70,相关系数为0.74,决定系数为0.54,即两站评分呈现正相关关系，且bilibili分数的变化的一半可用bangumi分数变化来解释。</p>

<ul>
  <li>普通散点图</li>
</ul>

<p>按原始数据作散点图和趋势线：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">105</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">ax</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">bgmrating</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">bilirating</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="s">'red'</span><span class="p">,</span><span class="n">marker</span><span class="o">=</span><span class="s">'.'</span><span class="p">,</span><span class="n">s</span><span class="o">=</span><span class="mf">0.1</span><span class="p">)</span>
<span class="n">linx</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mf">0.1</span><span class="p">)</span>
<span class="n">liny</span><span class="o">=</span><span class="n">res</span><span class="p">.</span><span class="n">slope</span><span class="o">*</span><span class="n">linx</span><span class="o">+</span><span class="n">res</span><span class="p">.</span><span class="n">intercept</span>
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">linx</span><span class="p">,</span><span class="n">liny</span><span class="p">,</span><span class="n">ls</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span><span class="n">lw</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">'两站评分关系图'</span><span class="p">,</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'bangumi'</span><span class="p">,</span><span class="n">ylabel</span><span class="o">=</span><span class="s">'bilibili'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="s">'bili=%.4fbgm+%.4f</span><span class="se">\n</span><span class="s">R=%.2f'</span><span class="o">%</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="n">slope</span><span class="p">,</span><span class="n">res</span><span class="p">.</span><span class="n">intercept</span><span class="p">,</span><span class="n">res</span><span class="p">.</span><span class="n">rvalue</span><span class="p">),</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/db-1.svg" alt="db-1" /></p>

<p>但无论从图上看，还是从相关系数上看，两者的相关性存在，但不是很高。</p>

<h4 id="462-气泡图二维频次直方图与三维柱状图">4.6.2 气泡图、二维频次直方图与三维柱状图</h4>

<ul>
  <li>气泡图</li>
</ul>

<p>由于bangumi的评分精确到小数点后三位，相同评分的作品很少，普通的散点图对分布情况的展示效果不佳。故尝试作气泡图、二维频次直方图与三维柱状图增强数据直观性。</p>

<p>作气泡图首先要将bangumi的评分的分辨率降至0.1分，然后建立数据交叉表：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">[</span><span class="s">'bgmrating_2digit'</span><span class="p">]</span><span class="o">=</span><span class="n">db</span><span class="p">[</span><span class="s">'bgmrating'</span><span class="p">].</span><span class="n">copy</span><span class="p">()</span>
<span class="n">db</span><span class="p">[</span><span class="s">'bgmrating_2digit'</span><span class="p">]</span><span class="o">=</span><span class="n">db</span><span class="p">[</span><span class="s">'bgmrating_2digit'</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span> <span class="p">:</span> <span class="p">((</span><span class="n">x</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span><span class="o">//</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="p">)</span>
<span class="n">bb</span><span class="o">=</span><span class="n">pd</span><span class="p">.</span><span class="n">crosstab</span><span class="p">(</span><span class="n">index</span><span class="o">=</span><span class="n">db</span><span class="p">[</span><span class="s">'bgmrating_2digit'</span><span class="p">],</span><span class="n">columns</span><span class="o">=</span><span class="n">db</span><span class="p">[</span><span class="s">'bilirating'</span><span class="p">])</span>

<span class="n">bb</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">20</span><span class="p">:,</span><span class="mi">40</span><span class="p">:]</span>
</code></pre></div></div>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th>bilirating</th>
      <th>8.4</th>
      <th>8.5</th>
      <th>8.6</th>
      <th>8.7</th>
      <th>8.8</th>
      <th>8.9</th>
      <th>9.0</th>
      <th>9.1</th>
      <th>9.2</th>
      <th>9.3</th>
      <th>9.4</th>
      <th>9.5</th>
      <th>9.6</th>
      <th>9.7</th>
      <th>9.8</th>
      <th>9.9</th>
    </tr>
    <tr>
      <th>bgmrating_2digit</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>5.4</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5.5</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5.6</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5.7</th>
      <td>2</td>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5.8</th>
      <td>0</td>
      <td>4</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>5.9</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.0</th>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>4</td>
      <td>2</td>
      <td>4</td>
      <td>1</td>
      <td>6</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.1</th>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>2</td>
      <td>3</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>3</td>
      <td>2</td>
      <td>6</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.2</th>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>5</td>
      <td>1</td>
      <td>4</td>
      <td>7</td>
      <td>4</td>
      <td>5</td>
      <td>5</td>
      <td>4</td>
      <td>4</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.3</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>2</td>
      <td>5</td>
      <td>4</td>
      <td>7</td>
      <td>3</td>
      <td>5</td>
      <td>6</td>
      <td>5</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.4</th>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>7</td>
      <td>1</td>
      <td>8</td>
      <td>2</td>
      <td>5</td>
      <td>4</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.5</th>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>5</td>
      <td>10</td>
      <td>7</td>
      <td>14</td>
      <td>7</td>
      <td>4</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.6</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>4</td>
      <td>3</td>
      <td>3</td>
      <td>7</td>
      <td>11</td>
      <td>10</td>
      <td>7</td>
      <td>13</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.7</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>5</td>
      <td>6</td>
      <td>11</td>
      <td>13</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>4</td>
      <td>3</td>
      <td>8</td>
      <td>9</td>
      <td>4</td>
      <td>7</td>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>6.9</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>3</td>
      <td>3</td>
      <td>6</td>
      <td>10</td>
      <td>3</td>
      <td>13</td>
      <td>6</td>
      <td>0</td>
    </tr>
    <tr>
      <th>7.0</th>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>7</td>
      <td>6</td>
      <td>13</td>
      <td>21</td>
      <td>3</td>
      <td>0</td>
    </tr>
    <tr>
      <th>7.1</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>4</td>
      <td>8</td>
      <td>3</td>
      <td>10</td>
      <td>11</td>
      <td>8</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7.2</th>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>7</td>
      <td>16</td>
      <td>13</td>
      <td>13</td>
      <td>8</td>
      <td>0</td>
    </tr>
    <tr>
      <th>7.3</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>4</td>
      <td>10</td>
      <td>10</td>
      <td>15</td>
      <td>7</td>
      <td>1</td>
    </tr>
    <tr>
      <th>7.4</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>5</td>
      <td>2</td>
      <td>12</td>
      <td>17</td>
      <td>10</td>
      <td>0</td>
    </tr>
    <tr>
      <th>7.5</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>4</td>
      <td>10</td>
      <td>11</td>
      <td>9</td>
      <td>0</td>
    </tr>
    <tr>
      <th>7.6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>3</td>
      <td>0</td>
      <td>5</td>
      <td>15</td>
      <td>7</td>
      <td>2</td>
    </tr>
    <tr>
      <th>7.7</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>4</td>
      <td>2</td>
      <td>10</td>
      <td>10</td>
      <td>0</td>
    </tr>
    <tr>
      <th>7.8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>5</td>
      <td>3</td>
      <td>9</td>
      <td>10</td>
      <td>2</td>
    </tr>
    <tr>
      <th>7.9</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
      <td>10</td>
      <td>7</td>
      <td>3</td>
    </tr>
    <tr>
      <th>8.0</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>5</td>
      <td>10</td>
      <td>1</td>
    </tr>
    <tr>
      <th>8.1</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>5</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8.2</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>6</td>
      <td>8</td>
      <td>2</td>
    </tr>
    <tr>
      <th>8.3</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>8.4</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8.5</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8.6</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8.7</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
    <tr>
      <th>8.8</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9.0</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <th>9.1</th>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>

<p>接着对每一个点分别作图，实现气泡图的效果：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">106</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="k">for</span> <span class="n">eachbgmrating</span> <span class="ow">in</span> <span class="n">bb</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">tolist</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">eachbilirating</span> <span class="ow">in</span> <span class="n">bb</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">tolist</span><span class="p">():</span>
        <span class="n">ax</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">eachbgmrating</span><span class="p">,</span><span class="n">eachbilirating</span><span class="p">,</span>
                    <span class="n">s</span><span class="o">=</span><span class="n">bb</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">eachbgmrating</span><span class="p">,</span><span class="n">eachbilirating</span><span class="p">]</span><span class="o">**</span><span class="mf">1.1</span><span class="p">,</span>
                    <span class="n">marker</span><span class="o">=</span><span class="s">'.'</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="s">'red'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">'两站评分关系图'</span><span class="p">,</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'bangumi'</span><span class="p">,</span><span class="n">ylabel</span><span class="o">=</span><span class="s">'bilibili'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/db-2.svg" alt="db-2" /></p>

<ul>
  <li>二维频次直方图</li>
</ul>

<p>还可直接使用hist2d函数构造二维频次直方图，附带标尺：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">107</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">hist2d</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">bgmrating</span><span class="p">,</span><span class="n">db</span><span class="p">.</span><span class="n">bilirating</span><span class="p">,</span><span class="n">bins</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span><span class="n">cmap</span><span class="o">=</span><span class="s">'Reds'</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mf">9.1</span><span class="p">),</span><span class="n">ylim</span><span class="o">=</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mf">9.9</span><span class="p">),</span><span class="n">title</span><span class="o">=</span><span class="s">'两站评分二维频次直方图'</span><span class="p">,</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'bangumi'</span><span class="p">,</span><span class="n">ylabel</span><span class="o">=</span><span class="s">'bilibili'</span><span class="p">)</span>
<span class="n">cb</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">()</span>
<span class="n">cb</span><span class="p">.</span><span class="n">set_label</span><span class="p">(</span><span class="s">'counts'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/db-3.svg" alt="db-3" /></p>

<ul>
  <li>三维柱状图</li>
</ul>

<p>如果画出三维柱状分布图，柱高度代表作品数量，可以更明显地看出b站评分相对于bangumi更为集中，且绝大多数分布在9分以上。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">mpl_toolkits.mplot3d</span> <span class="kn">import</span> <span class="n">Axes3D</span>
<span class="kn">import</span> <span class="nn">matplotlib</span> <span class="k">as</span> <span class="n">mpl</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">108</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">111</span><span class="p">,</span><span class="n">projection</span><span class="o">=</span><span class="s">'3d'</span><span class="p">)</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">bb</span><span class="p">.</span><span class="n">index</span><span class="p">.</span><span class="n">to_list</span><span class="p">()</span> <span class="c1">#bilibili评分
</span><span class="n">x_index</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">bb</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="n">to_list</span><span class="p">()</span><span class="c1">#该bilibili评分对应的bangumi评分序列
</span><span class="n">y_index</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">y</span><span class="p">))</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x_index</span><span class="p">:</span><span class="c1">#对于每个bilibili评分
</span>    <span class="n">z</span> <span class="o">=</span> <span class="n">bb</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">y_index</span><span class="p">]</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">,</span> <span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">zdir</span><span class="o">=</span><span class="s">'x'</span><span class="p">,</span><span class="n">width</span><span class="o">=</span><span class="mf">0.2</span><span class="p">)</span><span class="c1">#以bangumi评分序列为底轴作图
</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">'三维分布图'</span><span class="p">,</span><span class="n">xlabel</span><span class="o">=</span><span class="s">'bangumi'</span><span class="p">,</span><span class="n">ylabel</span><span class="o">=</span><span class="s">'bilibili'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/db-4.svg" alt="db-4" /></p>

<h4 id="463-箱线图">4.6.3 箱线图</h4>

<p>比较两网站的片均评分和中位数，可以看到bangumi两者差距很小，而b站平均分明显小于中位数。</p>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>bilibili</th>
      <th>bangumi</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>片均评分</th>
      <td>9.12592</td>
      <td>6.633856</td>
    </tr>
    <tr>
      <th>中位数</th>
      <td>9.50000</td>
      <td>6.691500</td>
    </tr>
  </tbody>
</table>

<p>平均数小于中位数，意味着存在许多低分作品，且没有与之数量相当的高分作品。
我们可以通过箱线图更直观地展示两站评分的这种差异。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">102</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">ax</span><span class="p">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">,</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">dropna</span><span class="p">()],</span><span class="n">showmeans</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">meanline</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span><span class="n">sym</span><span class="o">=</span><span class="s">'.'</span><span class="p">,</span><span class="n">widths</span><span class="o">=</span><span class="mf">0.3</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_xticklabels</span><span class="p">([</span><span class="s">'bangumi'</span><span class="p">,</span><span class="s">'bilibili'</span><span class="p">])</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'分数'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'bangumi与bilibili评分箱线图'</span><span class="p">,</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="/assets/images/200628/bangumi-2.svg" alt="bangumi-2" /></p>

<p>可以看到，b站的异常值均出现在下边缘以下，并且数量比bangumi的多。而从直方图上也能看出，b站评分产生严重的拖尾，导致其片均评分明显小于中位数。</p>

<h4 id="464-两网站评分特征及原因推测">4.6.4 两网站评分特征及原因推测</h4>

<p>通过bilibili的评分<a href="#431-bilibili">频数分布直方图</a>，可以看到作品评分在高分段扎堆，呈现的趋势基本上是分数越高，作品越多。9.7分就有378部，占到了全部有评分动画的五分之一，严重地丧失了区分度。并且，从<a href="#462_1">箱线图</a>中也能看出b站低评分很多导致片均评分低于中位数。</p>

<p>一般来说，作品评分极高和极低的作品数都应该很少，绝大多数作品评分应当集中在平均值左右（即正态分布）。很显然，b站的评分分布严重偏离了正态分布。</p>

<p>相比于bilibili，bangumi的<a href="#432-bangumi">频数分布直方图</a>呈现出两头低，中间高，左右对称的特点，相应的正态分布曲线与实际分布高度吻合。而且bangumi的分数集中度也较低，在6.6-6.7区间也只有266部动画，占比只有二十分之一多一点。所以至少从统计学规律上说，bangumi这个网站的评分更有参考意义。</p>

<p>与bangumi的对比告诉我们，b站的评分数据存在诸多异常之处。</p>

<p>既然分布很异常，那么b站评分到底代表了什么？产生这种分布的原因是什么？笔者尝试通过数据给出一些合理推断。</p>

<ul>
  <li><strong>相对人气指数</strong></li>
</ul>

<p>我们需要回来关注另一组数据，那就是片均评分和人均评分。</p>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>bilibili</th>
      <th>bangumi</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>片均评分</th>
      <td>9.211588</td>
      <td>6.633856</td>
    </tr>
    <tr>
      <th>票均评分</th>
      <td>9.062114</td>
      <td>7.185152</td>
    </tr>
  </tbody>
</table>

<p>b站的片均评分高于票均评分，而bangumi的片均评分高于票均评分。</p>

<p>这说明了什么呢？首先我们知道，点评数与热度成正比。那么</p>

<ul>
  <li>当片均高于票均时，意味着高评分动画的评分人数较少，出现了好番不火的情况；</li>
  <li>当片均低于票均时，意味着低评分动画的评分人数较少，出现了烂番没人看的情况。</li>
</ul>

<p>显然，后者更符合常理。</p>

<p>现在，我们用数据说话，用具体数字表达“好番不火”或“烂番没人看”的程度。</p>

<p>好番是要和烂番作对比的，所以我们定义一个函数，称为<em>相对人气指数</em>，在给出百分比累积排名x的情况下，
相对人气指数的定义为：</p>

<p><img src="/assets/images/200628/formula.png" alt="formula" /></p>

<p>该比值表示好番热度与同等程度的烂番热度之比。</p>

<p>并且，累积排名越高，则表示排名越靠前，而且如果好番和热度成正比，这个相对人气指数应当随累积排名增大而增大，是一个单调递增函数。</p>

<p>我们将相对人气指数对累积排名作图：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 分别计算两网站的相对人气指数
</span><span class="n">bgm_ninki</span><span class="o">=</span><span class="p">[</span>
    <span class="n">bgmdb</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="o">&gt;=</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">i</span><span class="p">)].</span><span class="n">votes</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span><span class="o">/</span>
    <span class="n">bgmdb</span><span class="p">[</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="o">&lt;=</span><span class="n">bgmdb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">i</span><span class="p">)].</span><span class="n">votes</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">51</span><span class="p">)</span>
<span class="p">]</span>
<span class="n">bili_ninki</span><span class="o">=</span><span class="p">[</span>
    <span class="n">bilidb</span><span class="p">[</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="o">&gt;=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="n">i</span><span class="p">)].</span><span class="n">raters</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span><span class="o">/</span>
    <span class="n">bilidb</span><span class="p">[</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="o">&lt;=</span><span class="n">bilidb</span><span class="p">.</span><span class="n">rating</span><span class="p">.</span><span class="n">quantile</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">i</span><span class="p">)].</span><span class="n">raters</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">51</span><span class="p">)</span>
<span class="p">]</span>

<span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">109</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span><span class="o">=</span><span class="n">fig</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>
<span class="n">x</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">51</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">bgm_ninki</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="s">'bangumi'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">bili_ninki</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="s">'bilibili'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="p">(</span><span class="mf">0.5</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="n">ylim</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">),</span><span class="n">xticks</span><span class="o">=</span><span class="p">[</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">0.6</span><span class="p">,</span><span class="mf">0.7</span><span class="p">,</span><span class="mf">0.8</span><span class="p">,</span><span class="mf">0.9</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="n">xticklabels</span><span class="o">=</span><span class="p">[</span><span class="mi">50</span><span class="p">,</span><span class="mi">60</span><span class="p">,</span><span class="mi">70</span><span class="p">,</span><span class="mi">80</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="mi">100</span><span class="p">],</span>
    <span class="n">xlabel</span><span class="o">=</span><span class="s">'百分比排名'</span><span class="p">,</span><span class="n">title</span><span class="o">=</span><span class="s">"相对人气指数"</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>

<span class="n">ax</span><span class="p">.</span><span class="n">axhline</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="mf">2.5</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="s">'black'</span><span class="p">,</span><span class="n">ls</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span><span class="n">lw</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">axhspan</span><span class="p">(</span><span class="n">ymin</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">ymax</span><span class="o">=</span><span class="mf">2.5</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'yellow'</span><span class="p">,</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.2</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/db-5.svg" alt="db-5" /></p>

<p>可以看到，bgm明显出现了好番很火，烂番没人看的情况，而b站的曲线基本徘徊在1-2.5之间，这意味着有与看好番差不多人数的人也看烂番。</p>

<p>总的来说就是b站好番不火的程度比bangumi严重得多。</p>

<p>我们来分析好番不火出现的原因，而刚刚提到对“好”字的理解，我们就来谈一谈好番的评价标准。</p>

<p>评价一部番其实是蛮困难的事情，需要考虑故事情节、人物、画面、音乐、表达的思想内涵等等。</p>

<p>而现在看来，B站小伙伴们对于好番的评价标准可能出现了偏差：</p>

<p>现在有一种观点，认为人们只想看到他们想看到的东西，我想这也适用于评分者们。
这种倾向的一个集中表现就是合自己口味就打高分，不合自己口味就打压。
分数的高低代表自己接受不接受这部作品。
这种模糊片面，且带有强烈主观性的倾向会导致某些剧情或者设定晦涩难懂的作品难以得到多数人理解，遭冷门和打低分的概率增加，
这在高分段尤为明显。很多真正有思想有深度的番在热度和评分上均不敌所谓的季度霸权番。</p>

<p>总的来说就是：
<strong>B站的评分中含有更多的“观众接受度”的成分。</strong>
其实这种现象很常见。
以钉钉作为例子。
钉钉软件质量不错，能提供强大的团队协作支持，极大地方便了远程办公，
然而由于你知道的原因，广大同学并不接受这个软件，所以惨遭分期付款。</p>

<p>钉钉的评分很明显可以由两部分解释：5分是评软件功能的，而1分则表现接受程度。</p>

<p>下表是2017年以来b站评分9.8分及以上并且播放量超过1000万的作品（由于匹配不完全原因，列表不全），可以看到很多“霸权番”的身影，这些番热度和接受度都很高。</p>

<table border="0" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>中文名</th>
      <th>b站评分</th>
      <th>bgm评分</th>
      <th>bgm排名</th>
      <th>播放量</th>
      <th>放送开始</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>77</th>
      <td>辉夜大小姐想让我告白？～天才们的恋爱头脑战～</td>
      <td>9.9</td>
      <td>7.966</td>
      <td>4.61</td>
      <td>117788191</td>
      <td>2020年4月11日</td>
    </tr>
    <tr>
      <th>150</th>
      <td>擅长捉弄的高木同学 第二季</td>
      <td>9.9</td>
      <td>7.669</td>
      <td>10.02</td>
      <td>43794382</td>
      <td>2019年7月7日</td>
    </tr>
    <tr>
      <th>31</th>
      <td>强风吹拂</td>
      <td>9.9</td>
      <td>8.241</td>
      <td>1.87</td>
      <td>24923712</td>
      <td>2018年10月2日</td>
    </tr>
    <tr>
      <th>101</th>
      <td>妖精森林的小不点</td>
      <td>9.9</td>
      <td>7.852</td>
      <td>6.55</td>
      <td>19621709</td>
      <td>2018年1月12日</td>
    </tr>
    <tr>
      <th>208</th>
      <td>鬼灭之刃</td>
      <td>9.8</td>
      <td>7.515</td>
      <td>14.25</td>
      <td>475758252</td>
      <td>2019年4月6日</td>
    </tr>
    <tr>
      <th>39</th>
      <td>JOJO的奇妙冒险 黄金之风</td>
      <td>9.8</td>
      <td>8.106</td>
      <td>2.93</td>
      <td>288360998</td>
      <td>2018年10月5日</td>
    </tr>
    <tr>
      <th>105</th>
      <td>辉夜大小姐想让我告白～天才们的恋爱头脑战～</td>
      <td>9.8</td>
      <td>7.817</td>
      <td>7.15</td>
      <td>194717353</td>
      <td>2019年1月12日</td>
    </tr>
    <tr>
      <th>274</th>
      <td>刺客伍六七</td>
      <td>9.8</td>
      <td>7.386</td>
      <td>19.04</td>
      <td>249105011</td>
      <td>2018年4月25日</td>
    </tr>
    <tr>
      <th>254</th>
      <td>青春笨蛋少年不做兔女郎学姐的梦</td>
      <td>9.8</td>
      <td>7.416</td>
      <td>17.96</td>
      <td>139628305</td>
      <td>2018年10月3日</td>
    </tr>
    <tr>
      <th>187</th>
      <td>某科学的超电磁炮T</td>
      <td>9.8</td>
      <td>7.583</td>
      <td>12.13</td>
      <td>96256223</td>
      <td>2020年1月10日</td>
    </tr>
    <tr>
      <th>398</th>
      <td>碧蓝之海</td>
      <td>9.8</td>
      <td>7.205</td>
      <td>26.50</td>
      <td>66390730</td>
      <td>2018年7月13日</td>
    </tr>
    <tr>
      <th>174</th>
      <td>女高中生的无所事事</td>
      <td>9.8</td>
      <td>7.606</td>
      <td>11.63</td>
      <td>48538811</td>
      <td>2019年7月5日</td>
    </tr>
    <tr>
      <th>159</th>
      <td>约定的梦幻岛</td>
      <td>9.8</td>
      <td>7.654</td>
      <td>10.45</td>
      <td>49401260</td>
      <td>2019年1月10日</td>
    </tr>
    <tr>
      <th>60</th>
      <td>少女终末旅行</td>
      <td>9.8</td>
      <td>8.001</td>
      <td>4.00</td>
      <td>29103828</td>
      <td>2017年10月6日</td>
    </tr>
    <tr>
      <th>230</th>
      <td>Megalo Box</td>
      <td>9.8</td>
      <td>7.457</td>
      <td>16.35</td>
      <td>39774790</td>
      <td>2018年4月5日</td>
    </tr>
    <tr>
      <th>108</th>
      <td>宝石之国</td>
      <td>9.8</td>
      <td>7.809</td>
      <td>7.38</td>
      <td>56474833</td>
      <td>2017年10月7日</td>
    </tr>
    <tr>
      <th>488</th>
      <td>魔卡少女樱 透明牌篇</td>
      <td>9.8</td>
      <td>7.043</td>
      <td>33.93</td>
      <td>51432035</td>
      <td>2018年1月7日</td>
    </tr>
    <tr>
      <th>203</th>
      <td>齐木楠雄的灾难 第二季</td>
      <td>9.8</td>
      <td>7.518</td>
      <td>14.15</td>
      <td>81010663</td>
      <td>2018年1月16日</td>
    </tr>
    <tr>
      <th>29</th>
      <td>比宇宙更远的地方</td>
      <td>9.8</td>
      <td>8.234</td>
      <td>1.99</td>
      <td>17111562</td>
      <td>2018年1月2日</td>
    </tr>
    <tr>
      <th>97</th>
      <td>月色真美</td>
      <td>9.8</td>
      <td>7.852</td>
      <td>6.55</td>
      <td>49090357</td>
      <td>2017年4月6日</td>
    </tr>
    <tr>
      <th>422</th>
      <td>剑网3·侠肝义胆沈剑心</td>
      <td>9.8</td>
      <td>7.129</td>
      <td>30.36</td>
      <td>74053515</td>
      <td>2018年9月21日</td>
    </tr>
    <tr>
      <th>340</th>
      <td>街角魔族</td>
      <td>9.8</td>
      <td>7.282</td>
      <td>23.12</td>
      <td>25037979</td>
      <td>2019年7月11日</td>
    </tr>
    <tr>
      <th>121</th>
      <td>终将成为你</td>
      <td>9.8</td>
      <td>7.757</td>
      <td>8.23</td>
      <td>17766674</td>
      <td>2018年10月5日</td>
    </tr>
    <tr>
      <th>316</th>
      <td>非人哉</td>
      <td>9.8</td>
      <td>7.336</td>
      <td>21.03</td>
      <td>266252297</td>
      <td>2018年3月29日</td>
    </tr>
    <tr>
      <th>394</th>
      <td>风灵玉秀</td>
      <td>9.8</td>
      <td>7.211</td>
      <td>26.31</td>
      <td>14756338</td>
      <td>2017年4月1日</td>
    </tr>
    <tr>
      <th>91</th>
      <td>少女☆歌剧 Revue Starlight</td>
      <td>9.8</td>
      <td>7.871</td>
      <td>6.14</td>
      <td>12244034</td>
      <td>2018年7月12日</td>
    </tr>
    <tr>
      <th>612</th>
      <td>索玛丽与森林之神</td>
      <td>9.8</td>
      <td>6.818</td>
      <td>43.60</td>
      <td>14488526</td>
      <td>2020年1月9日</td>
    </tr>
    <tr>
      <th>335</th>
      <td>神推偶像登上武道馆我就死而无憾</td>
      <td>9.8</td>
      <td>7.298</td>
      <td>22.44</td>
      <td>10146270</td>
      <td>2020年1月10日</td>
    </tr>
    <tr>
      <th>376</th>
      <td>请吃红小豆吧！</td>
      <td>9.8</td>
      <td>7.254</td>
      <td>24.19</td>
      <td>53938485</td>
      <td>2018年7月5日</td>
    </tr>
    <tr>
      <th>4</th>
      <td>3月的狮子 第二季</td>
      <td>9.8</td>
      <td>8.816</td>
      <td>0.19</td>
      <td>10668551</td>
      <td>2017年10月14日</td>
    </tr>
    <tr>
      <th>485</th>
      <td>邻家的吸血鬼小妹</td>
      <td>9.8</td>
      <td>7.037</td>
      <td>34.20</td>
      <td>20233778</td>
      <td>2018年10月5日</td>
    </tr>
    <tr>
      <th>206</th>
      <td>夏目友人帐 陆</td>
      <td>9.8</td>
      <td>7.528</td>
      <td>13.81</td>
      <td>37366405</td>
      <td>2017年4月11日</td>
    </tr>
  </tbody>
</table>

<p>当然，它们在专业评分网站的评分也不会低，在b站拿到评分前100名的番剧，在bangumi平均排前13%，但是相比而言b站评分过于集中，缺乏区分度。</p>

<p>相比而言，在bangumi拿到前100名的番剧，在b站平均只能排在前30%。很多老番在各个方面和新番有的一拼，却没有新番的排面，热度低倒是正常，可是评分都排不上第一梯队。</p>

<p>这不但是好番不火的体现，同时也反映了另一个问题。</p>

<ul>
  <li><strong>不同年份动画平均排名</strong></li>
</ul>

<p>我们作出两个网站不同年份动画平均排名折线图:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 增加bili百分比排名和bgm百分比排名列
</span><span class="n">db</span><span class="p">[</span><span class="s">'biliprank'</span><span class="p">]</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">bilirating</span><span class="p">.</span><span class="n">rank</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">values</span>
<span class="n">db</span><span class="p">.</span><span class="n">biliprank</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">biliprank</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">db</span><span class="p">))</span>
<span class="n">db</span><span class="p">[</span><span class="s">'bgmprank'</span><span class="p">]</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">bgmrating</span><span class="p">.</span><span class="n">rank</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">).</span><span class="n">values</span>
<span class="n">db</span><span class="p">.</span><span class="n">bgmprank</span><span class="o">=</span><span class="n">db</span><span class="p">.</span><span class="n">bgmprank</span><span class="p">.</span><span class="nb">apply</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">/</span><span class="nb">len</span><span class="p">(</span><span class="n">db</span><span class="p">))</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">num</span><span class="o">=</span><span class="mi">110</span><span class="p">,</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">),</span><span class="n">dpi</span><span class="o">=</span><span class="mi">200</span><span class="p">,</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>
<span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">()</span>  
<span class="n">ax</span><span class="p">.</span><span class="n">invert_yaxis</span><span class="p">()</span><span class="c1"># 将y轴反向
</span><span class="n">db</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'年度'</span><span class="p">).</span><span class="n">bgmprank</span><span class="p">.</span><span class="n">mean</span><span class="p">()[</span><span class="mi">22</span><span class="p">:].</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s">'bangumi'</span><span class="p">)</span>
<span class="n">db</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="s">'年度'</span><span class="p">).</span><span class="n">biliprank</span><span class="p">.</span><span class="n">mean</span><span class="p">()[</span><span class="mi">22</span><span class="p">:].</span><span class="n">plot</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s">'bilibili'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">axhline</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="mf">0.45</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="s">'red'</span><span class="p">,</span><span class="n">ls</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span><span class="n">lw</span><span class="o">=</span><span class="mf">0.3</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">axvline</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mf">2012.3</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="s">'green'</span><span class="p">,</span><span class="n">ls</span><span class="o">=</span><span class="s">':'</span><span class="p">,</span><span class="n">lw</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s">'两站各年度动画平均评分变化'</span><span class="p">,</span><span class="n">ylabel</span><span class="o">=</span><span class="s">'排名'</span><span class="p">,</span><span class="n">yticks</span><span class="o">=</span><span class="p">[</span><span class="mf">0.2</span><span class="p">,</span><span class="mf">0.3</span><span class="p">,</span><span class="mf">0.4</span><span class="p">,</span><span class="mf">0.5</span><span class="p">,</span><span class="mf">0.6</span><span class="p">]</span>
    <span class="p">,</span><span class="n">yticklabels</span><span class="o">=</span><span class="p">[</span><span class="s">'前20%'</span><span class="p">,</span><span class="s">'前30%'</span><span class="p">,</span><span class="s">'前40%'</span><span class="p">,</span><span class="s">'前50%'</span><span class="p">,</span><span class="s">'前60%'</span><span class="p">],</span><span class="n">xticks</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">2001</span><span class="p">,</span><span class="mi">2020</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/assets/images/200628/db-6.svg" alt="db-6" /></p>

<p>可以提取出两个特征：</p>

<ol>
  <li>总体来说两站基本趋势相同，说明动画业界衰退态势明显，近十年来作品平均排名在后半部分徘徊；</li>
  <li>b站对于2012年之后的动画作品排名始终高于bgm，尤其是近几年的新番排名明显偏高，相对来说，老番的排名则偏低，这充分印证了上文提到的新番压制老番的情况。</li>
</ol>

<p>就这些情况，推测如下：</p>

<blockquote>
  <p>作品年龄与其观众的年龄是成正比的</p>

  <p>而且是观众年龄越大，评价质量就越高，在一定程度上也就意味这给出5星的概率越低</p>

  <p>不同年龄段评价标准的差异影响了新番和旧番评分情况，同时也与好番不火情况有关。</p>
</blockquote>

<h4 id="465-总结">4.6.5 总结</h4>

<p>基于上述分析和事实，我总结了B站评分不正常分布产生的原因：</p>

<ol>
  <li><strong>评分缺乏基本的指导</strong></li>
</ol>

<p>在bangumi评分时，会从1星到10星分别提示
不忍直视-很差-差-较差-不过不失-还行-推荐-力荐-神作和超神作，并且还会提示评分者谨慎评价。</p>

<p>虽然只有这几个字的建议，但这能够在很大程度上促使评分者谨慎思考。</p>

<p>而回过头看b站的评分环境，除了令人迷惑的“发表五星评价需扣除一枚硬币”之外别无他物。</p>

<ol>
  <li><strong>评分没有限制</strong></li>
</ol>

<p>bangumi在评分时首先要点击“看过”才能评分。虽然说这种形式上的限制可能没什么作用，但相比之下，B站作为一个提供视频源的网站，居然不用看番就可以评分，这极大降低了评分的门槛，严重降低了评分的可信度，而且我认为b站对于投五星需扣除1硬币这种操作荒谬至极，如果b站希望通过评分扣硬币这种方式促使点评者谨慎评价，那么应当是投任何分数都需要硬币，而且至少2个。</p>

<ol>
  <li><strong>评分标准存在问题</strong></li>
</ol>

<p>首先对于平台来说，评分机制缺乏指导，过于模糊，而对于用户而言，发表的评价质量也不高，往往非常片面，并且用户接受度的影响较大。但是另一方面，由于所有作品的评分和点评都是公开可见的，在评分时固然会受到已有评价的影响。有些人看起来很有主见，实际上很容易被带节奏，改变自己的想法。这一方面表示对一部作品没有自己的理解，没有形成明确的观点，另一方面也是从众心理的体现。</p>

<p>所以我提出两条建议：</p>

<ul>
  <li>对平台而言希望b站能提供基本的评分指导；</li>
  <li>对用户来说，希望在评分时能够做到冷静、谨慎。</li>
</ul>

<h2 id="5-结语">5 结语</h2>

<p>本文从爬虫入手，爬取bilibili和bangumi网站的动画作品数据，对动画作品进行了一些数据分析，了解了近年来动画行业的发展趋势，并且通过分析b站评分数据并将其与专业评分网站bangumi比较，发现</p>

<ul>
  <li>
    <p>与专业评分网站相比，b站评分的参考作用存在但有限</p>
  </li>
  <li>
    <p>b站评分分布异常，区分度不大，佳作被埋没</p>
  </li>
  <li>
    <p>点评者们对评分标准把握出现偏差，过度追捧新番</p>
  </li>
  <li>
    <p>b站评分机制不完善，缺乏限制和指导</p>
  </li>
</ul>

<p>出于时间和能力原因，很多分析并不全面，甚至可能导致结论错误。接下来的工作便是优化代码，并对数据进行更深入的分析。</p>
:ET